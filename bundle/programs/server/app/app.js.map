{"version":3,"sources":["meteor://💻app/imports/api/accounts/server/methods.js","meteor://💻app/imports/api/blocks/server/methods.js","meteor://💻app/imports/api/blocks/server/publications.js","meteor://💻app/imports/api/blocks/blocks.js","meteor://💻app/imports/api/chain/server/methods.js","meteor://💻app/imports/api/chain/server/publications.js","meteor://💻app/imports/api/chain/chain.js","meteor://💻app/imports/api/coin-stats/server/methods.js","meteor://💻app/imports/api/coin-stats/coin-stats.js","meteor://💻app/imports/api/delegations/server/methods.js","meteor://💻app/imports/api/delegations/delegations.js","meteor://💻app/imports/api/ledger/server/methods.js","meteor://💻app/imports/api/proposals/server/methods.js","meteor://💻app/imports/api/proposals/server/publications.js","meteor://💻app/imports/api/proposals/proposals.js","meteor://💻app/imports/api/records/server/methods.js","meteor://💻app/imports/api/records/server/publications.js","meteor://💻app/imports/api/records/records.js","meteor://💻app/imports/api/status/server/publications.js","meteor://💻app/imports/api/status/status.js","meteor://💻app/imports/api/transactions/server/methods.js","meteor://💻app/imports/api/transactions/server/publications.js","meteor://💻app/imports/api/transactions/transactions.js","meteor://💻app/imports/api/validators/server/methods.js","meteor://💻app/imports/api/validators/server/publications.js","meteor://💻app/imports/api/validators/validators.js","meteor://💻app/imports/api/voting-power/history.js","meteor://💻app/imports/api/evidences/evidences.js","meteor://💻app/imports/api/validator-sets/validator-sets.js","meteor://💻app/imports/startup/both/index.js","meteor://💻app/imports/startup/server/create-indexes.js","meteor://💻app/imports/startup/server/index.js","meteor://💻app/imports/startup/server/register-api.js","meteor://💻app/imports/startup/server/util.js","meteor://💻app/imports/ui/components/Icons.jsx","meteor://💻app/both/utils/coins.js","meteor://💻app/both/utils/loader.js","meteor://💻app/both/utils/time.js","meteor://💻app/server/main.js"],"names":["Meteor","module","link","v","HTTP","Validators","fetchFromUrl","url","res","get","API","statusCode","e","console","log","methods","address","unblock","available","response","JSON","parse","content","result","account","type","value","BaseVestingAccount","BaseAccount","balances","coins","account_number","balance","delegations","delegation_responses","unbonding","unbonding_responses","rewards","total_rewards","total","validator","findOne","$or","operator_address","delegator_address","operatorAddress","commission","length","data","delegation_response","delegation","shares","parseFloat","relegations","redelegation_responses","completionTime","forEach","relegation","entries","time","Date","completion_time","redelegationCompletionTime","undelegations","unbondingCompletionTime","i","unbondings","redelegations","redelegation","validator_dst_address","count","userRedelegations","export","getValidatorProfileUrl","Blockscon","Chain","ValidatorSets","ValidatorRecords","Analytics","VPDistributions","VotingPowerHistory","Transactions","Evidences","sha256","cheerio","getRemovedValidators","prevValidators","validators","p","splice","getValidatorFromConsensusKey","consensusKey","pubkeyType","settings","public","secp256k1","pubkey","call","pub_key","identity","them","pictures","primary","stringify","indexOf","teamPage","page","load","attr","getValidatorUptime","validatorSet","slashingParams","upsert","chainId","$set","key","bech32ValConsAddress","signingInfo","val_signing_info","valData","tombstoned","jailed_until","index_offset","parseInt","start_height","uptime","params","signed_blocks_window","missed_blocks_counter","calculateVPDist","analyticsData","blockData","activeValidators","find","status","jailed","sort","voting_power","fetch","numTopTwenty","Math","ceil","numBottomEighty","topTwentyPower","bottomEightyPower","numTopThirtyFour","numBottomSixtySix","topThirtyFourPercent","bottomSixtySixPercent","vpDist","height","numValidators","totalVotingPower","blockTime","createAt","insert","blocks","proposerAddress","heights","map","block","blocksStats","$in","totalBlockDiff","b","timeDiff","RPC","sync_info","latest_block_height","currHeight","limit","startHeight","SYNCING","until","curr","consensus_pubkey","totalValidators","Object","keys","update","startBlockTime","bulkValidators","rawCollection","initializeUnorderedBulkOp","bulkUpdateLastSeen","bulkValidatorRecords","bulkVPHistory","bulkTransactions","startGetHeightTime","hash","block_id","transNum","txs","header","lastBlockHash","last_block_id","proposer_address","t","txhash","Buffer","from","toUpperCase","processed","execute","err","evidence","evidenceList","precommitsCount","last_commit","signatures","endGetHeightTime","startGetValidatorsTime","block_height","validatorsCount","tempValidators","valconsAddress","bech32PrefixConsAddr","precommits","push","validator_address","record","exists","j","precommitAddress","updateOne","lastSeen","startBlockInsertTime","endBlockInsertTime","chainStatus","chain_id","lastSyncedTime","defaultBlockTime","dateLatest","dateLast","genesisTime","abs","getTime","endGetValidatorsTime","averageBlockTime","startFindValidatorsNameTime","tokens","unbonding_height","valExist","bech32ConsensusPubKey","bech32PrefixConsPub","description","profile_url","accpub","bech32PrefixAccPub","operator_pubkey","bech32PrefixValPub","proposer_priority","prev_voting_power","block_time","prevVotingPower","changeType","changeData","validatorUpdateWindow","selfDelegation","self_delegation","delegator_shares","endFindValidatorsNameTime","startAnayticsInsertTime","endAnalyticsInsertTime","startVUpTime","endVUpTime","startVRTime","endVRTime","endBlockTime","lastBlocksSyncedTime","publishComposite","children","Mongo","Collection","helpers","proposer","ChainStates","Coin","default","findVotingPower","genValidators","power","consensus","round_state","round","step","votedPower","votes","prevotes_bit_array","split","votingHeight","votingRound","votingStep","prevotes","latestBlock","chain","latestBlockHeight","latestBlockTime","latestState","activeVP","activeVotingPower","staking","chainStates","bonding","pool","bondedTokens","bonded_tokens","notBondedTokens","not_bonded_tokens","StakingCoin","denom","modules","bank","supply","totalSupply","amount","distribution","communityPool","minting","inflation","provisions","annual_provisions","annualProvisions","mint","gov","created","CoinStats","publish","last_updated_at","fields","coinId","coingeckoId","now","setMinutes","Delegations","concat","createdAt","_objectSpread","txInfo","timestamp","post","code","Error","raw_log","message","body","path","txMsg","accountNumber","sequence","adjustment","toString","gas_estimate","Proposals","tally_params","proposals","finishedProposalIds","Set","proposalId","activeProposals","proposalIds","bulkProposals","proposal","proposal_id","has","$nin","deposits","getVoteDetail","tally","updatedAt","voters","vote","voter","votingPowerMap","validatorAddressMap","moniker","delegatorShares","deductedShares","votingPower","undefined","check","id","Number","AverageData","AverageValidatorData","Status","MissedBlocksStats","MissedBlocks","_","BULKUPDATEMAXSIZE","getBlockStats","latestHeight","blockStats","cond","$and","$gt","$lte","options","assign","getPreviousRecord","voterAddress","previousRecord","blockHeight","lastUpdatedHeight","prevStats","pick","missCount","totalCount","COUNTMISSEDBLOCKS","startTime","explorerStatus","lastProcessedMissedBlockHeight","min","bulkMissedStats","initializeOrderedBulkOp","validatorsMap","proposerVoterStats","votedValidators","validatorSets","votedVotingPower","activeValidator","currentValidator","set","n","stats","client","_driver","mongo","bulkPromise","then","bindEnvironment","nInserted","nUpserted","nModified","Promise","await","lastProcessedMissedBlockTime","COUNTMISSEDBLOCKSSTATS","lastMissedBlockHeight","missedRecords","counts","existingRecord","lastMissedBlockTime","averageVotingPower","analytics","lastMinuteVotingPower","lastMinuteBlockTime","lastHourVotingPower","lastHourBlockTime","lastDayVotingPower","lastDayBlockTime","blockHeights","a","num","conditions","proposerMoniker","voterMoniker","AddressLength","TXSYNCING","transactions","tx","tx_response","missing","$lt","includes","bech32PrefixValAddr","bech32PrefixAccAddr","$exists","$ne","validatorAddress","delegatorAddress","query","TxIcon","delegationsCount","pagination","node_info","network","lastKeybaseFetchTime","profileUrl","toUTCString","direction","val","uptimeWindow","firstSeen","history","createIndex","unique","partialFilterExpression","onPageLoad","Helmet","sink","helmet","renderStatic","appendToHead","meta","title","bech32","tmhash","hexToBech32","prefix","addressBuffer","encode","toWords","pubkeyToBech32Old","buffer","pubkeyAminoPrefix","alloc","copy","pubkeyToBech32","bech32ToPubkey","fromWords","decode","words","slice","getAddressFromPubkey","bytes","getDelegator","operatorAddr","getKeybaseTeamPic","keybaseUrl","getVersion","version","Assets","getText","DenomSymbol","ProposalStatusIcon","VoteIcon","InfoIcon","React","UncontrolledTooltip","props","valid","Component","constructor","ref","createRef","render","tooltipText","numbro","autoformat","formatter","format","coinList","bondDenom","lowerDenom","toLowerCase","_coin","coin","displayName","_amount","fraction","stakingAmount","precision","minStake","repeat","MinStake","DisappearedLoading","Loader","exportDefault","goTimeToISOString","millisecond","seconds","nanos","substring","toISOString","remote","rpc","api","timerBlocks","timerTransactions","timerChain","timerConsensus","timerProposal","timerProposalsResults","timerMissedBlock","timerDelegation","timerAggregate","timerFetchKeybase","DEFAULTSETTINGS","updateChainStatus","error","updateBlock","updateTransactions","getConsensusState","getProposals","getProposalsResults","updateMissedBlocks","fetchKeybase","getDelegations","aggregateMinutely","aggregateHourly","aggregateDaily","startup","isDevelopment","DEFAULTSETTINGSJSON","process","env","NODE_TLS_REJECT_UNAUTHORIZED","warn","param","debug","startTimer","setInterval","consensusInterval","blockInterval","transactionsInterval","statusInterval","proposalInterval","missedBlocksInterval","keybaseFetchingInterval","getUTCSeconds","getUTCMinutes","getUTCHours"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Validators } from '/imports/api/validators/validators.js';\nconst fetchFromUrl = (url) => {\n    try{\n        let res = HTTP.get(API + url);\n        if (res.statusCode == 200){\n            return res\n        };\n    }\n    catch (e){\n        console.log(url);\n        console.log(e);\n    }\n}\n\nMeteor.methods({\n    'accounts.getAccountDetail': function(address){\n        this.unblock();\n        let url = API + '/auth/accounts/'+ address;\n        try{\n            let available = HTTP.get(url);\n            if (available.statusCode == 200){\n                // return JSON.parse(available.content).account\n                let response = JSON.parse(available.content).result;\n                let account;\n                if ((response.type === 'cosmos-sdk/Account') || (response.type === 'cosmos-sdk/BaseAccount'))\n                    account = response.value;\n                else if (response.type === 'cosmos-sdk/DelayedVestingAccount' || response.type === 'cosmos-sdk/ContinuousVestingAccount')\n                    account = response.value.BaseVestingAccount.BaseAccount\n\n                try{\n                    url = API + '/bank/balances/' + address;\n                    response = HTTP.get(url);\n                    let balances = JSON.parse(response.content).result;\n                    account.coins = balances;\n\n                    if (account && account.account_number != null)\n                        return account\n                    return null\n                }\n                catch (e){\n                    return null;\n                }\n            }\n        }\n        catch (e){\n            console.log(url);\n            console.log(e)\n        }\n    },\n    'accounts.getBalance': function(address){\n        this.unblock();\n        let balance = {}\n\n        // get available atoms\n        let url = API + '/cosmos/bank/v1beta1/balances/'+ address;\n        try{\n            let available = HTTP.get(url);\n            if (available.statusCode == 200){\n                balance.available = JSON.parse(available.content).balances;\n\n            }\n        }\n        catch (e){\n            console.log(url);\n            console.log(e)\n        }\n\n        // get delegated amnounts\n        url = API + '/cosmos/staking/v1beta1/delegations/'+address;\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                balance.delegations = JSON.parse(delegations.content).delegation_responses;\n            }\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n        // get unbonding\n        url = API + '/cosmos/staking/v1beta1/delegators/'+address+'/unbonding_delegations';\n        try{\n            let unbonding = HTTP.get(url);\n            if (unbonding.statusCode == 200){\n                balance.unbonding = JSON.parse(unbonding.content).unbonding_responses;\n            }\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n\n        // get rewards\n        url = API + '/cosmos/distribution/v1beta1/delegators/'+address+'/rewards';\n        try{\n            let rewards = HTTP.get(url);\n            if (rewards.statusCode == 200){\n                //get seperate rewards value\n                balance.rewards = JSON.parse(rewards.content).rewards;\n                //get total rewards value\n                balance.total_rewards= JSON.parse(rewards.content).total;\n                \n            }\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n\n        // get commission\n        let validator = Validators.findOne(\n            {$or: [{operator_address:address}, {delegator_address:address}, {address:address}]})\n        if (validator) {\n            let url = API + '/cosmos/distribution/v1beta1/validators/'+validator.operator_address+'/commission';\n            balance.operatorAddress = validator.operator_address;\n            try {\n                let rewards = HTTP.get(url);\n                if (rewards.statusCode == 200){\n                    let content = JSON.parse(rewards.content).commission;\n                    if (content.commission && content.commission.length > 0)\n                        balance.commission = content.commission;\n\n                }\n\n            }\n            catch (e){\n                console.log(url);\n                console.log(e)\n            }\n        }\n\n        return balance;\n    },\n    'accounts.getDelegation'(address, validator){\n        this.unblock();\n        let url = `/cosmos/staking/v1beta1/validators/${validator}/delegations/${address}`;\n        let delegations = fetchFromUrl(url);\n        console.log(delegations);\n        delegations = delegations && delegations.data.delegation_response;\n        if (delegations && delegations.delegation.shares)\n            delegations.delegation.shares = parseFloat(delegations.delegation.shares);\n\n        url = `/cosmos/staking/v1beta1/delegators/${address}/redelegations?dst_validator_addr=${validator}`;\n        let relegations = fetchFromUrl(url);\n        relegations = relegations && relegations.data.redelegation_responses;\n        let completionTime;\n        if (relegations) {\n            relegations.forEach((relegation) => {\n                let entries = relegation.entries\n                let time = new Date(entries[entries.length-1].completion_time)\n                if (!completionTime || time > completionTime)\n                    completionTime = time\n            })\n            delegations.redelegationCompletionTime = completionTime;\n        }\n\n        url = `/cosmos/staking/v1beta1/validators/${validator}/delegations/${address}/unbonding_delegation`;\n        let undelegations = fetchFromUrl(url);\n        undelegations = undelegations && undelegations.data.result;\n        if (undelegations) {\n            delegations.unbonding = undelegations.entries.length;\n            delegations.unbondingCompletionTime = undelegations.entries[0].completion_time;\n        }\n        return delegations;\n    },\n    'accounts.getAllDelegations'(address){\n        this.unblock();\n        let url = API + '/cosmos/staking/v1beta1/delegators/'+address+'/delegations';\n\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                delegations = JSON.parse(delegations.content).result;\n                if (delegations && delegations.length > 0){\n                    delegations.forEach((delegation, i) => {\n                        if (delegations[i] && delegations[i].shares)\n                            delegations[i].shares = parseFloat(delegations[i].shares);\n                    })\n                }\n\n                return delegations;\n            };\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'accounts.getAllUnbondings'(address){\n        this.unblock();\n        let url = API + '/cosmos/staking/v1beta1/delegators/'+address+'/unbonding_delegations';\n\n        try{\n            let unbondings = HTTP.get(url);\n            if (unbondings.statusCode == 200){\n                unbondings = JSON.parse(unbondings.content).result;\n                return unbondings;\n            };\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'accounts.getAllRedelegations'(address, validator){\n        this.unblock();        \n        let url = `/cosmos/staking/v1beta1/v1beta1/delegators/${address}/redelegations&src_validator_addr=${validator}`;\n        try{\n            let result = fetchFromUrl(url);\n            if (result && result.data) {\n                let redelegations = {}\n                result.data.forEach((redelegation) => {\n                    let entries = redelegation.entries;\n                    redelegations[redelegation.validator_dst_address] = {\n                        count: entries.length,\n                        completionTime: entries[0].completion_time\n                    }\n                })\n                return redelegations\n            }\n        }\n        catch(e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'accounts.getRedelegations'(address) {\n        this.unblock();\n        let url = API + '/cosmos/staking/v1beta1/v1beta1/delegators/' + address +'/redelegations';\n\n        try {\n            let userRedelegations = HTTP.get(url);\n            if (userRedelegations.statusCode == 200) {\n                userRedelegations = JSON.parse(userRedelegations.content).result;\n\n                return userRedelegations;\n            };\n        } catch (e) {\n            console.log(url);\n            console.log(e.response.content);\n        }\n    },\n}) \n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Blockscon } from '/imports/api/blocks/blocks.js';\nimport { Chain } from '/imports/api/chain/chain.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Validators } from '/imports/api/validators/validators.js';\nimport { ValidatorRecords, Analytics, VPDistributions} from '/imports/api/records/records.js';\nimport { VotingPowerHistory } from '/imports/api/voting-power/history.js';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Evidences } from '../../evidences/evidences.js';\nimport { sha256 } from 'js-sha256';\n// import { getAddress } from 'tendermint/lib/pubkey';\nimport * as cheerio from 'cheerio';\n\n\ngetRemovedValidators = (prevValidators, validators) => {\n    // let removeValidators = [];\n    for (p in prevValidators){\n        for (v in validators){\n            if (prevValidators[p].address == validators[v].address){\n                prevValidators.splice(p,1);\n            }\n        }\n    }\n\n    return prevValidators;\n}\n\n\ngetValidatorFromConsensusKey = (validators, consensusKey) => {\n    for (v in validators){\n        try {\n            let pubkeyType = Meteor.settings.public.secp256k1?'tendermint/PubKeySecp256k1':'tendermint/PubKeyEd25519';\n            let pubkey = Meteor.call('bech32ToPubkey', consensusKey, pubkeyType);\n            if (validators[v].pub_key.value == pubkey){\n                return validators[v]\n            }\n        }\n        catch (e){\n            console.log(\"Error converting pubkey: %o\\n%o\", consensusKey, e)\n        }\n    }\n    return null;\n}\n\n\nexport const getValidatorProfileUrl = (identity) => {\n    console.log(\"Get validator avatar.\")\n    if (identity.length == 16){\n        let response = HTTP.get(`https://keybase.io/_/api/1.0/user/lookup.json?key_suffix=${identity}&fields=pictures`)\n        if (response.statusCode == 200) {\n            let them = response?.data?.them\n            return them && them.length && them[0]?.pictures && them[0]?.pictures?.primary && them[0]?.pictures?.primary?.url;\n        } else {\n            console.log(JSON.stringify(response))\n        }\n    } else if (identity.indexOf(\"keybase.io/team/\")>0){\n        let teamPage = HTTP.get(identity);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        } else {\n            console.log(JSON.stringify(teamPage))\n        }\n    }\n}\n\n\ngetValidatorUptime = async (validatorSet) => {\n\n    // get validator uptime\n  \n    let url = `${API}/cosmos/slashing/v1beta1/params`;\n    let response = HTTP.get(url);\n    let slashingParams = JSON.parse(response.content)\n\n    Chain.upsert({chainId:Meteor.settings.public.chainId}, {$set:{\"slashing\":slashingParams}});\n\n    for(let key in validatorSet){\n        // console.log(\"Getting uptime validator: %o\", validatorSet[key]);\n        try {\n            // console.log(\"=== Signing Info ===: %o\", signingInfo)\n\n            url = `${API}/cosmos/slashing/v1beta1/signing_infos/${validatorSet[key].bech32ValConsAddress}`\n            let response = HTTP.get(url);\n            let signingInfo = JSON.parse(response.content).val_signing_info;\n            if (signingInfo){\n                let valData = validatorSet[key]\n                valData.tombstoned = signingInfo.tombstoned;\n                valData.jailed_until = signingInfo.jailed_until;\n                valData.index_offset = parseInt(signingInfo.index_offset);\n                valData.start_height = parseInt(signingInfo.start_height);\n                valData.uptime = (slashingParams.params.signed_blocks_window - parseInt(signingInfo.missed_blocks_counter))/slashingParams.params.signed_blocks_window * 100;\n                Validators.upsert({bech32ValConsAddress:validatorSet[key].bech32ValConsAddress}, {$set:valData})\n            }\n        }\n        catch(e){\n            console.log(url);\n            console.log(\"Getting signing info of %o: %o\", validatorSet[key].bech32ValConsAddress, e);\n        }\n    }\n}\n\ncalculateVPDist = async (analyticsData, blockData) => {\n    console.log(\"===== calculate voting power distribution =====\");\n    let activeValidators = Validators.find({status:'BOND_STATUS_BONDED',jailed:false},{sort:{voting_power:-1}}).fetch();\n    let numTopTwenty = Math.ceil(activeValidators.length*0.2);\n    let numBottomEighty = activeValidators.length - numTopTwenty;\n\n    let topTwentyPower = 0;\n    let bottomEightyPower = 0;\n\n    let numTopThirtyFour = 0;\n    let numBottomSixtySix = 0;\n    let topThirtyFourPercent = 0;\n    let bottomSixtySixPercent = 0;\n\n\n\n    for (v in activeValidators){\n        if (v < numTopTwenty){\n            topTwentyPower += activeValidators[v].voting_power;\n        }\n        else{\n            bottomEightyPower += activeValidators[v].voting_power;\n        }\n\n\n        if (topThirtyFourPercent < 0.34){\n            topThirtyFourPercent += activeValidators[v].voting_power / analyticsData.voting_power;\n            numTopThirtyFour++;\n        }\n    }\n\n    bottomSixtySixPercent = 1 - topThirtyFourPercent;\n    numBottomSixtySix = activeValidators.length - numTopThirtyFour;\n\n    let vpDist = {\n        height: blockData.height,\n        numTopTwenty: numTopTwenty,\n        topTwentyPower: topTwentyPower,\n        numBottomEighty: numBottomEighty,\n        bottomEightyPower: bottomEightyPower,\n        numTopThirtyFour: numTopThirtyFour,\n        topThirtyFourPercent: topThirtyFourPercent,\n        numBottomSixtySix: numBottomSixtySix,\n        bottomSixtySixPercent: bottomSixtySixPercent,\n        numValidators: activeValidators.length,\n        totalVotingPower: analyticsData.voting_power,\n        blockTime: blockData.time,\n        createAt: new Date()\n    }\n\n    console.log(vpDist);\n\n    VPDistributions.insert(vpDist);\n}\n\n// var filtered = [1, 2, 3, 4, 5].filter(notContainedIn([1, 2, 3, 5]));\n// console.log(filtered); // [4]\n\nMeteor.methods({\n    'blocks.averageBlockTime'(address){\n        this.unblock();\n        let blocks = Blockscon.find({proposerAddress:address}).fetch();\n        let heights = blocks.map((block) => {\n            return block.height;\n        });\n        let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n        // console.log(blocksStats);\n\n        let totalBlockDiff = 0;\n        for (b in blocksStats){\n            totalBlockDiff += blocksStats[b].timeDiff;\n        }\n        return totalBlockDiff/heights.length;\n    },\n    'blocks.getLatestHeight': function() {\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = JSON.parse(response.content);\n            return (status.result.sync_info.latest_block_height);\n        }\n        catch (e){\n            return 0;\n        }\n    },\n    'blocks.getCurrentHeight': function() {\n        this.unblock();\n        let currHeight = Blockscon.find({},{sort:{height:-1},limit:1}).fetch();\n        // console.log(\"currentHeight:\"+currHeight);\n        let startHeight = Meteor.settings.params.startHeight;\n        if (currHeight && currHeight.length == 1) {\n            let height = currHeight[0].height;\n            if (height > startHeight)\n                return height\n        }\n        return startHeight\n    },\n    'blocks.blocksUpdate': async function() {\n        this.unblock();\n        if (SYNCING)\n            return \"Syncing...\";\n        else console.log(\"start to sync\");\n        // Meteor.clearInterval(Meteor.timerHandle);\n        // get the latest height\n        let until = Meteor.call('blocks.getLatestHeight');\n        // console.log(until);\n        // get the current height in db\n        let curr = Meteor.call('blocks.getCurrentHeight');\n        console.log(curr);\n        // loop if there's update in db\n        if (until > curr) {\n            SYNCING = true;\n\n            let validatorSet = [];\n            // get latest validator candidate information\n\n            let url = API + '/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED&pagination.limit=200&pagination.count_total=true';\n\n            try{\n                let response = HTTP.get(url);\n                let result = JSON.parse(response.content).validators;\n                result.forEach((validator) => validatorSet[validator.consensus_pubkey.key] = validator);\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n\n            try{\n                url = API + '/cosmos/staking/v1beta1/validators?status=BOND_STATUS_UNBONDING&pagination.limit=200&pagination.count_total=true';\n                let response = HTTP.get(url);\n                let result = JSON.parse(response.content).validators;\n                result.forEach((validator) => validatorSet[validator.consensus_pubkey.key] = validator);\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n\n            try{\n                url = API + '/cosmos/staking/v1beta1/validators?status=BOND_STATUS_UNBONDED&pagination.limit=200&pagination.count_total=true';\n                let response = HTTP.get(url);\n                let result = JSON.parse(response.content).validators;\n                result.forEach((validator) => validatorSet[validator.consensus_pubkey.key] = validator);\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n\n            // console.log(\"validaotor set: %o\", validatorSet);\n            let totalValidators = Object.keys(validatorSet).length;\n            console.log(\"all validators: \"+ totalValidators);\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{totalValidators:totalValidators}});\n\n            for (let height = curr+1 ; height <= until ; height++) {\n            // for (let height = curr+1 ; height <= curr+1 ; height++) {\n                let startBlockTime = new Date();\n                // add timeout here? and outside this loop (for catched up and keep fetching)?\n                this.unblock();\n                // let url = RPC+'/block?height=' + height;\n\n                url = `${API}/blocks/${height}`;\n                let analyticsData = {};\n\n                const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n                const bulkUpdateLastSeen = Validators.rawCollection().initializeUnorderedBulkOp();\n                const bulkValidatorRecords = ValidatorRecords.rawCollection().initializeUnorderedBulkOp();\n                const bulkVPHistory = VotingPowerHistory.rawCollection().initializeUnorderedBulkOp();\n                const bulkTransactions = Transactions.rawCollection().initializeUnorderedBulkOp();\n\n                console.log(\"Getting block at height: %o\", height);\n                try{\n                    let startGetHeightTime = new Date();\n                    \n                    let response = HTTP.get(url);\n\n                    // store height, hash, numtransaction and time in db\n                    let blockData = {};\n                    let block = JSON.parse(response.content);\n                    blockData.height = height;\n                    blockData.hash = block.block_id.hash;\n                    blockData.transNum = block.block.data.txs?block.block.data.txs.length:0;\n                    blockData.time = block.block.header.time;\n                    blockData.lastBlockHash = block.block.header.last_block_id.hash;\n                    blockData.proposerAddress = block.block.header.proposer_address;\n                    blockData.validators = [];\n\n\n                    // save txs in database\n                    if (block.block.data.txs && block.block.data.txs.length > 0){\n                        for (t in block.block.data.txs){\n                            bulkTransactions.insert({\n                                // hash has to be in uppercase\n                                txhash: sha256(Buffer.from(block.block.data.txs[t], 'base64')).toUpperCase(),\n                                height: parseInt(height),\n                                processed: false\n                            })\n                        }\n\n                        if (bulkTransactions.length > 0){\n                            bulkTransactions.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                                if (result){\n                                    // console.log(result);\n                                }\n                            });\n                        }\n                    }\n\n                    // save double sign evidences\n                    if (block.block.evidence.evidenceList){\n                        Evidences.insert({\n                            height: height,\n                            evidence: block.block.evidence.evidenceList\n                        });\n                    }\n\n                    // console.log(\"signatures: %o\", block.block.lastCommit.signaturesList)\n\n                    blockData.precommitsCount = block.block.last_commit.signatures.length;\n\n                    analyticsData.height = height;\n\n                    let endGetHeightTime = new Date();\n                    console.log(\"Get height time: \"+((endGetHeightTime-startGetHeightTime)/1000)+\"seconds.\");\n\n\n                    let startGetValidatorsTime = new Date();\n                    // update chain status\n\n                    let validators = []\n                    let page = 0;\n                    // let nextKey = 0;\n                    try {\n                        let result;\n\n                        do {\n                            let url = RPC+`/validators?height=${height}&page=${++page}&per_page=100`;\n                            let response = HTTP.get(url);\n                            result = JSON.parse(response.content).result;\n                            // console.log(\"========= validator result ==========: %o\", result)\n                            validators = [...validators, ...result.validators];\n                                \n                            // console.log(validators.length);\n                            // console.log(parseInt(result.total));\n                        }\n                        while (validators.length < parseInt(result.total))\n\n                    }\n                    catch(e){\n                        console.log(\"Getting validator set at height %o: %o\", height, e)\n                    }\n\n                    // console.log(validators)\n\n                    ValidatorSets.insert({\n                        block_height: height,\n                        validators: validators\n                    })\n\n                    blockData.validatorsCount = validators.length;\n\n                    // temporarily add bech32 concensus keys to the validator set list\n                    let tempValidators = [];\n                    for (let v in validators){\n                        // validators[v].consensus_pubkey = Meteor.call('pubkeyToBech32Old', validators[v].pub_key, Meteor.settings.public.bech32PrefixConsPub);\n                        // validators[v].valconsAddress = validators[v].address;\n                        validators[v].valconsAddress = Meteor.call('hexToBech32', validators[v].address, Meteor.settings.public.bech32PrefixConsAddr);\n                        // validators[v].address = Meteor.call('getAddressFromPubkey', validators[v].pubKey);\n                        // tempValidators[validators[v].pubKey.value] = validators[v];\n                        tempValidators[validators[v].address] = validators[v];\n                    }\n                    validators = tempValidators;\n\n                    // console.log(\"before comparing precommits: %o\", validators);\n\n                    // Tendermint v0.33 start using \"signatures\" in last block instead of \"precommits\"\n                    let precommits = block.block.last_commit.signatures; \n                    if (precommits != null){\n                        // console.log(precommits);\n                        for (let i=0; i<precommits.length; i++){\n                            if (precommits[i] != null){\n                                blockData.validators.push(precommits[i].validator_address);\n                            }\n                        }\n\n                        analyticsData.precommits = precommits.length;\n                        // record for analytics\n                        // PrecommitRecords.insert({height:height, precommits:precommits.length});\n                    }\n\n                    if (height > 1){\n                        // record precommits and calculate uptime\n                        // only record from block 2\n                        console.log(\"Inserting precommits\")\n                        for (i in validators){\n                            let address = validators[i].address;\n                            let record = {\n                                height: height,\n                                address: address,\n                                exists: false,\n                                voting_power: parseInt(validators[i].voting_power)\n                            }\n\n                            for (j in precommits){\n                                if (precommits[j] != null){\n                                    let precommitAddress = precommits[j].validator_address;\n                                    if (address == precommitAddress){\n                                        record.exists = true;\n                                        bulkUpdateLastSeen.find({address:precommitAddress}).upsert().updateOne({$set:{lastSeen:blockData.time}});\n                                        precommits.splice(j,1);\n                                        break;\n                                    }\n                                }\n                            }\n\n                            bulkValidatorRecords.insert(record);\n                            // ValidatorRecords.update({height:height,address:record.address},record);\n                        }\n                    }\n                        \n                    let startBlockInsertTime = new Date();\n                    Blockscon.insert(blockData);\n                    let endBlockInsertTime = new Date();\n                    console.log(\"Block insert time: \"+((endBlockInsertTime-startBlockInsertTime)/1000)+\"seconds.\");\n\n                    let chainStatus = Chain.findOne({chainId:block.block.header.chain_id});\n                    let lastSyncedTime = chainStatus?chainStatus.lastSyncedTime:0;\n                    let timeDiff;\n                    let blockTime = Meteor.settings.params.defaultBlockTime;\n                    if (lastSyncedTime){\n                        let dateLatest = new Date(blockData.time);\n                        let dateLast = new Date(lastSyncedTime);\n                        let genesisTime = new Date(Meteor.settings.public.genesisTime);\n                        timeDiff = Math.abs(dateLatest.getTime() - dateLast.getTime());\n                        // blockTime = (chainStatus.blockTime * (blockData.height - 1) + timeDiff) / blockData.height;\n                        blockTime = (dateLatest.getTime() - genesisTime.getTime()) / blockData.height;\n                    }\n\n                    let endGetValidatorsTime = new Date();\n                    console.log(\"Get height validators time: \"+((endGetValidatorsTime-startGetValidatorsTime)/1000)+\"seconds.\");\n\n                    Chain.update({chainId:block.block.header.chainId}, {$set:{lastSyncedTime:blockData.time, blockTime:blockTime}});\n\n                    analyticsData.averageBlockTime = blockTime;\n                    analyticsData.timeDiff = timeDiff;\n\n                    analyticsData.time = blockData.time;\n\n                    // initialize validator data at first block\n                    // if (height == 1){\n                    //     Validators.remove({});\n                    // }\n\n                    analyticsData.voting_power = 0;\n\n                    let startFindValidatorsNameTime = new Date();\n                    for (v in validatorSet){\n                        let valData = validatorSet[v];\n\n                        valData.tokens = parseInt(valData.tokens);\n                        valData.unbonding_height = parseInt(valData.unbonding_height)\n\n                        let valExist = Validators.findOne({\"consensus_pubkey.key\":v});\n                            \n                        // console.log(valData);\n\n                        // console.log(\"===== voting power ======: %o\", valData)\n                        analyticsData.voting_power += valData.voting_power\n\n                        // console.log(analyticsData.voting_power);\n                        if (!valExist && valData.consensus_pubkey){\n                                \n                            // let val = getValidatorFromConsensusKey(validators, v);\n                            // get the validator hex address and other bech32 addresses.\n\n                            valData.delegator_address = Meteor.call('getDelegator', valData.operator_address);\n\n                            // console.log(\"get hex address\")\n                            // valData.address = getAddress(valData.consensusPubkey);\n                            console.log(\"get bech32 consensus pubkey\");\n                            valData.bech32ConsensusPubKey = Meteor.call('pubkeyToBech32', valData.consensus_pubkey, Meteor.settings.public.bech32PrefixConsPub);\n\n                            \n                            valData.address = Meteor.call('getAddressFromPubkey', valData.consensus_pubkey);\n                            valData.bech32ValConsAddress = Meteor.call('hexToBech32', valData.address, Meteor.settings.public.bech32PrefixConsAddr);\n\n                            // assign back to the validator set so that we can use it to find the uptime\n\n                            if (validatorSet[v])\n                                validatorSet[v].bech32ValConsAddress = valData.bech32ValConsAddress;\n\n                                \n                            // First time adding validator to the database.\n                            // Fetch profile picture from Keybase\n\n                            if (valData.description && valData.description.identity){\n                                try{\n                                    valData.profile_url = getValidatorProfileUrl(valData.description.identity)\n                                }\n                                catch (e){\n                                    console.log(\"Error fetching keybase: %o\", e)\n                                }\n                            }\n                                    \n\n                            valData.accpub = Meteor.call('pubkeyToBech32', valData.consensus_pubkey, Meteor.settings.public.bech32PrefixAccPub);\n                            valData.operator_pubkey = Meteor.call('pubkeyToBech32', valData.consensus_pubkey, Meteor.settings.public.bech32PrefixValPub);\n\n                            // insert first power change history \n\n                            // valData.voting_power = validators[valData.consensusPubkey.value]?parseInt(validators[valData.consensusPubkey.value].votingPower):0;\n                            valData.voting_power = validators[valData.address]?parseInt(validators[valData.address].voting_power):0;\n                            valData.proposer_priority = validators[valData.address]?parseInt(validators[valData.address].proposer_priority):0;\n\n                            console.log(\"Validator not found. Insert first VP change record.\")\n\n                            // console.log(\"first voting power: %o\", valData.voting_power);\n                            bulkVPHistory.insert({\n                                address: valData.address,\n                                prev_voting_power: 0,\n                                voting_power: valData.voting_power,\n                                type: 'add',\n                                height: blockData.height,\n                                block_time: blockData.time\n                            });\n                            // }\n                        }\n                        else{\n                            // console.log(valData);\n                            valData.address = valExist.address;\n\n                            // assign to valData for getting self delegation\n                            valData.delegator_address = valExist.delegator_address;\n                            valData.bech32ValConsAddress = valExist.bech32ValConsAddress;\n\n                            if (validatorSet[v]){\n                                validatorSet[v].bech32ValConsAddress = valExist.bech32ValConsAddress;\n                            }\n                            // console.log(valExist);\n                            // console.log(validators[valExist.address])\n                            // if (validators[valData.consensusPubkey.value]){\n                            if (validators[valExist.address]){\n                                // Validator exists and is in validator set, update voitng power.\n                                // If voting power is different from before, add voting power history\n                                valData.voting_power = parseInt(validators[valExist.address].voting_power);\n                                valData.proposer_priority = parseInt(validators[valExist.address].proposer_priority);\n                                let prevVotingPower = VotingPowerHistory.findOne({address:valExist.address}, {height:-1, limit:1});\n\n                                console.log(\"Validator already in DB. Check if VP changed.\");\n                                if (prevVotingPower){\n                                    if (prevVotingPower.voting_power != valData.voting_power){\n                                        let changeType = (prevVotingPower.voting_power > valData.voting_power)?'down':'up';\n                                        let changeData = {\n                                            address: valExist.address,\n                                            prev_voting_power: prevVotingPower.voting_power,\n                                            voting_power: valData.voting_power,\n                                            type: changeType,\n                                            height: blockData.height,\n                                            block_time: blockData.time\n                                        };\n                                        bulkVPHistory.insert(changeData);\n                                    }\n                                }\n                            }\n                            else{\n                                // Validator is not in the set and it has been removed.\n                                // Set voting power to zero and add voting power history.\n\n                                valData.address = valExist.address;\n                                valData.voting_power = 0;\n                                valData.proposer_priority = 0;\n\n                                let prevVotingPower = VotingPowerHistory.findOne({address:valExist.address}, {height:-1, limit:1});\n\n                                if (prevVotingPower && (prevVotingPower.voting_power > 0)){\n                                    console.log(\"Validator is in DB but not in validator set now. Add remove VP change.\");\n                                    bulkVPHistory.insert({\n                                        address: valExist.address,\n                                        prev_voting_power: prevVotingPower,\n                                        voting_power: 0,\n                                        type: 'remove',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n                                }\n                            }\n                        }\n\n                        // only update validator infor during start of crawling, end of crawling or every validator update window\n                        if ((height == curr+1) || (height == Meteor.settings.params.startHeight+1) || (height == until) || (height % Meteor.settings.params.validatorUpdateWindow == 0)){\n                            if ((height == Meteor.settings.params.startHeight+1) || (height % Meteor.settings.params.validatorUpdateWindow == 0)){    \n                                if (valData.status == 'BOND_STATUS_BONDED'){\n                                    url = `${API}/cosmos/staking/v1beta1/validators/${valData.operator_address}/delegations/${valData.delegator_address}`\n                                    try{\n                                        console.log(\"Getting self delegation\");\n        \n                                        let response = HTTP.get(url);\n                                        let selfDelegation = JSON.parse(response.content).delegation_response;\n        \n                                        valData.self_delegation = (selfDelegation.delegation && selfDelegation.delegation.shares)?parseFloat(selfDelegation.delegation.shares)/parseFloat(valData.delegator_shares):0;\n        \n                                    }\n                                    catch(e){\n                                        console.log(url);\n                                        console.log(\"Getting self delegation: %o\", e);\n                                        valData.self_delegation = 0;\n                                            \n                                    }\n                                }\n                            }\n\n                            console.log(\"Add validator upsert to bulk operations.\")\n                            bulkValidators.find({\"address\": valData.address}).upsert().updateOne({$set:valData});\n                        }\n                    }\n\n                    // store valdiators exist records\n                    // let existingValidators = Validators.find({address:{$exists:true}}).fetch();\n\n                    // update uptime by the end of the crawl or update window\n                    if ((height % Meteor.settings.params.validatorUpdateWindow == 0) || (height == until)){\n                        console.log(\"Update validator uptime.\")\n                        getValidatorUptime(validatorSet)\n                    }\n\n\n\n                    let endFindValidatorsNameTime = new Date();\n                    console.log(\"Get validators name time: \"+((endFindValidatorsNameTime-startFindValidatorsNameTime)/1000)+\"seconds.\");\n\n                    // record for analytics\n                    let startAnayticsInsertTime = new Date();\n                    Analytics.insert(analyticsData);\n                    let endAnalyticsInsertTime = new Date();\n                    console.log(\"Analytics insert time: \"+((endAnalyticsInsertTime-startAnayticsInsertTime)/1000)+\"seconds.\");\n\n                    // calculate voting power distribution every 60 blocks ~ 5mins\n\n                    if (height % 60 == 1){\n                        calculateVPDist(analyticsData, blockData)\n                    }\n\n                    let startVUpTime = new Date();\n                    if (bulkValidators.length > 0){\n                        console.log(\"############ Update validators ############\");\n                        bulkValidators.execute((err, result) => {\n                            if (err){\n                                console.log(\"Error while bulk insert validators: %o\",err);\n                            }\n                            if (result){\n                                bulkUpdateLastSeen.execute((err, result) => {\n                                    if (err){\n                                        console.log(\"Error while bulk update validator last seen: %o\",err);\n                                    }\n                                    if (result){\n                                    }\n                                })\n                            }\n                        });\n                    }\n\n                    let endVUpTime = new Date();\n                    console.log(\"Validator update time: \"+((endVUpTime-startVUpTime)/1000)+\"seconds.\");\n\n                    let startVRTime = new Date();\n                    if (bulkValidatorRecords.length > 0){\n                        bulkValidatorRecords.execute((err) => {\n                            if (err){\n                                console.log(err);\n                            }\n                        });\n                    }\n\n                    let endVRTime = new Date();\n                    console.log(\"Validator records update time: \"+((endVRTime-startVRTime)/1000)+\"seconds.\");\n\n                    if (bulkVPHistory.length > 0){\n                        bulkVPHistory.execute((err) => {\n                            if (err){\n                                console.log(err);\n                            }\n                        });\n                    }\n\n\n                    // }\n                }\n                catch (e){\n                    console.log(\"Block syncing stopped: %o\", e);\n                    SYNCING = false;\n                    return \"Stopped\";\n                }\n                let endBlockTime = new Date();\n                console.log(\"This block used: \"+((endBlockTime-startBlockTime)/1000)+\"seconds.\");\n            }\n            SYNCING = false;\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{lastBlocksSyncedTime:new Date()}});\n        }\n\n        return until;\n    },\n    'addLimit': function(limit) {\n        // console.log(limit+10)\n        return (limit+10);\n    },\n    'hasMore': function(limit) {\n        if (limit > Meteor.call('getCurrentHeight')) {\n            return (false);\n        } else {\n            return (true);\n        }\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Blockscon } from '../blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Transactions } from '../../transactions/transactions.js';\n\npublishComposite('blocks.height', function(limit){\n    return {\n        find(){\n            return Blockscon.find({}, {limit: limit, sort: {height: -1}})\n        },\n        children: [\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('blocks.findOne', function(height){\n    return {\n        find(){\n            return Blockscon.find({height:height})\n        },\n        children: [\n            {\n                find(block){\n                    return Transactions.find(\n                        {height:block.height}\n                    )\n                }\n            },\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Blockscon = new Mongo.Collection('blocks');\n\nBlockscon.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n});\n\n// Blockscon.helpers({\n//     sorted(limit) {\n//         return Blockscon.find({}, {sort: {height:-1}, limit: limit});\n//     }\n// });\n\n\n// Meteor.setInterval(function() {\n//     Meteor.call('blocksUpdate', (error, result) => {\n//         console.log(result);\n//     })\n// }, 30000000);","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Chain, ChainStates } from '../chain.js';\nimport Coin from '../../../../both/utils/coins.js';\n\nfindVotingPower = (validator, genValidators) => {\n    for (let v in genValidators){\n        if (validator.pub_key.value == genValidators[v].pub_key.value){\n            return parseInt(genValidators[v].power);\n        }\n    }\n}\n\nMeteor.methods({\n    'chain.getConsensusState': function(){\n        this.unblock();\n        let url = RPC+'/dump_consensus_state';\n        try{\n            let response = HTTP.get(url);\n            let consensus = JSON.parse(response.content);\n            consensus = consensus.result;\n            let height = consensus.round_state.height;\n            let round = consensus.round_state.round;\n            let step = consensus.round_state.step;\n            let votedPower = Math.round(parseFloat(consensus.round_state.votes[round].prevotes_bit_array.split(\" \")[3])*100);\n\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{\n                votingHeight: height,\n                votingRound: round,\n                votingStep: step,\n                votedPower: votedPower,\n                proposerAddress: consensus.round_state.validators.proposer.address,\n                prevotes: consensus.round_state.votes[round].prevotes,\n                precommits: consensus.round_state.votes[round].precommits\n            }});\n        }\n        catch(e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'chain.updateStatus': async function(){\n        this.unblock();\n        let url = \"\";\n        try{\n            url = API + '/blocks/latest';\n            let response = HTTP.get(url);\n            let latestBlock = JSON.parse(response.content);\n\n            let chain = {};\n            chain.chainId = latestBlock.block.header.chain_id;\n            chain.latestBlockHeight = parseInt(latestBlock.block.header.height);\n            chain.latestBlockTime = latestBlock.block.header.time;\n            let latestState = ChainStates.findOne({}, {sort: {height: -1}})\n            if (latestState && latestState.height >= chain.latestBlockHeight) {\n                return `no updates (getting block ${chain.latestBlockHeight} at block ${latestState.height})`\n            }\n\n            // Since Tendermint v0.33, validator page default set to return 30 validators.\n            // Query latest height with page 1 and 100 validators per page.\n\n            // validators = validators.validatorsList;\n            // chain.validators = validators.length;\n\n            let validators = []\n            let page = 0;\n\n            do {\n                url = RPC+`/validators?page=${++page}&per_page=100`;\n                let response = HTTP.get(url);\n                result = JSON.parse(response.content).result;\n                validators = [...validators, ...result.validators];\n                \n            }\n            while (validators.length < parseInt(result.total))\n\n            chain.validators = validators.length;\n            let activeVP = 0;\n            for (v in validators){\n                activeVP += parseInt(validators[v].voting_power);\n            }\n            chain.activeVotingPower = activeVP;\n\n            // update staking params\n            try {\n                url = API + '/cosmos/staking/v1beta1/params';\n                response = HTTP.get(url);\n                chain.staking = JSON.parse(response.content);\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            // Get chain states\n            if (parseInt(chain.latestBlockHeight) > 0){\n                let chainStates = {};\n                chainStates.height = parseInt(chain.latestBlockHeight);\n                chainStates.time = new Date(chain.latestBlockTime);\n\n                try{\n                    url = API + '/cosmos/staking/v1beta1/pool';\n                    let response = HTTP.get(url);\n                    let bonding = JSON.parse(response.content).pool;\n                    chainStates.bondedTokens = parseInt(bonding.bonded_tokens);\n                    chainStates.notBondedTokens = parseInt(bonding.not_bonded_tokens);\n                }\n                catch(e){\n                    console.log(e);\n                }\n\n                if ( Coin.StakingCoin.denom ) {\n                    if (Meteor.settings.public.modules.bank){\n                        try{\n                            url = API + '/cosmos/bank/v1beta1/supply/' + Coin.StakingCoin.denom;\n                            let response = HTTP.get(url);\n                            let supply = JSON.parse(response.content);\n                            chainStates.totalSupply = parseInt(supply.amount.amount);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                        // update bank params\n                        try {\n                            url = API + '/cosmos/bank/v1beta1/params';\n                            response = HTTP.get(url);\n                            chain.bank = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                    }\n\n                    if (Meteor.settings.public.modules.distribution){\n                        try {\n                            url = API + '/cosmos/distribution/v1beta1/community_pool';\n                            let response = HTTP.get(url);\n                            let pool = JSON.parse(response.content).pool;\n                            if (pool && pool.length > 0){\n                                chainStates.communityPool = [];\n                                pool.forEach((amount) => {\n                                    chainStates.communityPool.push({\n                                        denom: amount.denom,\n                                        amount: parseFloat(amount.amount)\n                                    })\n                                })\n                            }\n                        }\n                        catch (e){\n                            console.log(e)\n                        }\n\n                        // update distribution params\n                        try {\n                            url = API + '/cosmos/distribution/v1beta1/params';\n                            response = HTTP.get(url);\n                            chain.distribution = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    }\n\n                    if (Meteor.settings.public.modules.minting){\n                        try{\n                            url = API + '/cosmos/mint/v1beta1/inflation';\n                            let response = HTTP.get(url);\n                            let inflation = JSON.parse(response.content).inflation;\n                            // response = HTTP.get(url);\n                            // let inflation = JSON.parse(response.content).result;\n                            if (inflation){\n                                chainStates.inflation = parseFloat(inflation)\n                            }\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                        try{\n                            url = API + '/cosmos/mint/v1beta1/annual_provisions';\n                            let response = HTTP.get(url);\n                            let provisions = JSON.parse(response.content).annual_provisions;\n                            console.log(provisions)\n                            if (provisions){\n                                chainStates.annualProvisions = parseFloat(provisions)\n                            }\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n\n                        // update mint params\n                        try {\n                            url = API + '/cosmos/mint/v1beta1/params';\n                            response = HTTP.get(url);\n                            chain.mint = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    }\n\n                    if (Meteor.settings.public.modules.gov){\n                        // update gov params\n                        try {\n                            url = API + '/cosmos/gov/v1beta1/params/tallying';\n                            response = HTTP.get(url);\n                            chain.gov = JSON.parse(response.content);\n                        }\n                        catch(e){\n                            console.log(e);\n                        }\n                    }\n                }\n\n                ChainStates.insert(chainStates);\n            }\n\n            Chain.update({chainId:chain.chainId}, {$set:chain}, {upsert: true});\n\n            // chain.totalVotingPower = totalVP;\n\n            // validators = Validators.find({}).fetch();\n            // console.log(validators);\n            return chain.latestBlockHeight;\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n            return \"Error getting chain status.\";\n        }\n    },\n    'chain.getLatestStatus': function(){\n        this.unblock();\n        Chain.find().sort({created:-1}).limit(1);\n    },\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Chain, ChainStates } from '../chain.js';\nimport { CoinStats } from '../../coin-stats/coin-stats.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('chainStates.latest', function () {\n    return [\n        ChainStates.find({},{sort:{height:-1},limit:1}),\n        CoinStats.find({},{sort:{last_updated_at:-1},limit:1})\n    ];\n});\n\npublishComposite('chain.status', function(){\n    return {\n        find(){\n            return Chain.find({chainId:Meteor.settings.public.chainId});\n        },\n        children: [\n            {\n                find(chain){\n                    return Validators.find(\n                        {},\n                        {fields:{\n                            address:1,\n                            description:1,\n                            operatorAddress:1,\n                            status:-1,\n                            jailed:1,\n                            profile_url:1\n                        }}\n                    )\n                }\n            }\n        ]\n    }\n});","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Chain = new Mongo.Collection('chain');\nexport const ChainStates = new Mongo.Collection('chain_states')\n\nChain.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { CoinStats } from '../coin-stats.js';\nimport { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'coinStats.getCoinStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            try{\n                let now = new Date();\n                now.setMinutes(0);\n                let url = \"https://api.coingecko.com/api/v3/simple/price?ids=\"+coinId+\"&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true\";\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    // console.log(JSON.parse(response.content));\n                    let data = JSON.parse(response.content);\n                    data = data[coinId];\n                    // console.log(coinStats);\n                    return CoinStats.upsert({last_updated_at:data.last_updated_at}, {$set:data});\n                }\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n        }\n        else{\n            return \"No coingecko Id provided.\"\n        }\n    },\n    'coinStats.getStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            return (CoinStats.findOne({},{sort:{last_updated_at:-1}}));\n        }\n        else{\n            return \"No coingecko Id provided.\";\n        }\n\n    }\n})","import { Mongo } from 'meteor/mongo';\n\nexport const CoinStats = new Mongo.Collection('coin_stats');\n","import { Meteor } from 'meteor/meteor';\nimport { Delegations } from '../delegations.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.methods({\n    'delegations.getDelegations': async function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let delegations = [];\n        console.log(\"=== Getting delegations ===\");\n        for (v in validators){\n            if (validators[v].operator_address){\n                let url = API + '/cosmos/staking/v1beta1/validators/'+validators[v].operatorAddress+\"/delegations\";\n                try{\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let delegation = JSON.parse(response.content).result;\n                        // console.log(delegation);\n                        delegations = delegations.concat(delegation);\n                    }\n                    else{\n                        console.log(response.statusCode);\n                    }\n                }\n                catch (e){\n                    // console.log(url);\n                    console.log(e);\n                }    \n            }\n        }\n\n        let data = {\n            delegations: delegations,\n            createdAt: new Date(),\n        }\n\n        return Delegations.insert(data);\n    }\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Delegations = new Mongo.Collection('delegations');\n","import { HTTP } from 'meteor/http';\nimport { Validators } from '../../validators/validators';\n\nMeteor.methods({\n    'transaction.submit': function(txInfo) {\n        this.unblock();\n        const url = `${API}/txs`;\n        data = {\n            \"tx\": txInfo.value,\n            \"mode\": \"sync\"\n        }\n        const timestamp = new Date().getTime();\n        console.log(`submitting transaction${timestamp} ${url} with data ${JSON.stringify(data)}`)\n\n        let response = HTTP.post(url, {data});\n        console.log(`response for transaction${timestamp} ${url}: ${JSON.stringify(response)}`)\n        if (response.statusCode == 200) {\n            let data = response.data\n            if (data.code)\n                throw new Meteor.Error(data.code, JSON.parse(data.raw_log).message)\n            return response.data.txhash;\n        }\n    },\n    'transaction.execute': function(body, path) {\n        this.unblock();\n        const url = `${API}/${path}`;\n        data = {\n            \"base_req\": {\n                ...body,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"simulate\": false\n            }\n        };\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return JSON.parse(response.content);\n        }\n    },\n    'transaction.simulate': function(txMsg, from, accountNumber, sequence, path, adjustment='1.2') {\n        this.unblock();\n        const url = `${API}/${path}`;\n        console.log(txMsg);\n        data = {...txMsg,\n            \"base_req\": {\n                \"from\": from,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"gas_adjustment\": adjustment,\n                \"account_number\": accountNumber,\n                \"sequence\": sequence.toString(),\n                \"simulate\": true\n            }\n        };\n        console.log(url);\n        console.log(data);\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return JSON.parse(response.content).gas_estimate;\n        }\n    },\n    'isValidator': function(address){\n        this.unblock();\n        let validator = Validators.findOne({delegator_address:address})\n        return validator;\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Proposals } from '../proposals.js';\nimport { Chain } from '../../chain/chain.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.methods({\n    'proposals.getProposals': function(){\n        this.unblock();\n\n        // get gov tally prarams\n        let url = API + '/cosmos/gov/v1beta1/params/tallying';\n        try{\n            let response = HTTP.get(url);\n            let params = JSON.parse(response.content);\n\n            Chain.update({chainId: Meteor.settings.public.chainId}, {$set:{\"gov.tally_params\":params.tally_params}});\n\n            url = API + '/cosmos/gov/v1beta1/proposals';\n            response = HTTP.get(url);\n            let proposals = JSON.parse(response.content).proposals;\n            // console.log(proposals);\n\n            let finishedProposalIds = new Set(Proposals.find(\n                {\"status\":{$in:[\"PROPOSAL_STATUS_PASSED\", \"PROPOSAL_STATUS_REJECTED\", \"PROPOSAL_STATUS_REMOVED\"]}}\n            ).fetch().map((p)=> p.proposalId));\n\n            let activeProposals = new Set(Proposals.find(\n                { \"status\": { $in: [\"PROPOSAL_STATUS_VOTING_PERIOD\"] } }\n            ).fetch().map((p) => p.proposalId));\n            let proposalIds = [];\n            if (proposals.length > 0){\n                // Proposals.upsert()\n                const bulkProposals = Proposals.rawCollection().initializeUnorderedBulkOp();\n                for (let i in proposals){\n                    let proposal = proposals[i];\n                    proposal.proposalId = parseInt(proposal.proposal_id);\n                    proposalIds.push(proposal.proposalId);\n                    if (proposal.proposalId > 0 && !finishedProposalIds.has(proposal.proposalId)) {\n                        try{\n                            url = API + '/gov/proposals/'+proposal.proposalId+'/proposer';\n                            let response = HTTP.get(url);\n                            if (response.statusCode == 200){\n                                let proposer = JSON.parse(response?.content)?.result;\n                                if (proposer.proposal_id && (parseInt(proposer.proposal_id) == proposal.proposalId)){\n                                    proposal.proposer = proposer?.proposer;\n                                }\n                            }\n                            if (activeProposals.has(proposal.proposalId)){\n                                let validators = []\n                                let page = 0;\n\n                                do {\n                                    url = RPC + `/validators?page=${++page}&per_page=100`;\n                                    let response = HTTP.get(url);\n                                    result = JSON.parse(response.content).result;\n                                    validators = [...validators, ...result.validators];\n\n                                }\n                                while (validators.length < parseInt(result.total))\n\n                                let activeVotingPower = 0;\n                                for (v in validators) {\n                                    activeVotingPower += parseInt(validators[v].voting_power);\n                                }\n                                proposal.activeVotingPower = activeVotingPower;\n                            }\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                        }\n                        catch (e) {\n                            bulkProposals.find({proposalId:proposal.proposalId}).upsert().updateOne({ $set: proposal});\n                            console.log(url);\n                            console.log(e.response.content);\n                        }\n                    }\n                }\n                bulkProposals.find({proposalId:{$nin:proposalIds}, status:{$nin:[\"PROPOSAL_STATUS_VOTING_PERIOD\", \"PROPOSAL_STATUS_PASSED\", \"PROPOSAL_STATUS_REJECTED\", \"PROPOSAL_STATUS_REMOVED\"]}})\n                    .update({$set: {\"status\": \"PROPOSAL_STATUS_REMOVED\"}});\n                bulkProposals.execute();\n            }\n            return true\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'proposals.getProposalResults': function(){\n        this.unblock();\n        let proposals = Proposals.find({\"status\":{$nin:[\"PROPOSAL_STATUS_PASSED\", \"PROPOSAL_STATUS_REJECTED\", \"PROPOSAL_STATUS_REMOVED\"]}}).fetch();\n\n        if (proposals && (proposals.length > 0)){\n            for (let i in proposals){\n                if (parseInt(proposals[i].proposalId) > 0){\n                    let url = \"\";\n                    try{\n                        // get proposal deposits\n                        url = API + '/cosmos/gov/v1beta1/proposals/'+proposals[i].proposalId+'/deposits?pagination.limit=2000&pagination.count_total=true';\n                        let response = HTTP.get(url);\n                        let proposal = {proposalId: proposals[i].proposalId};\n                        if (response.statusCode == 200){\n                            let deposits = JSON.parse(response.content).deposits;\n                            proposal.deposits = deposits;\n                        }\n\n                        url = API + '/cosmos/gov/v1beta1/proposals/'+proposals[i].proposalId+'/votes?pagination.limit=2000&pagination.count_total=true';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let votes = JSON.parse(response.content).votes;\n                            proposal.votes = getVoteDetail(votes);\n                        }\n\n                        url = API + '/cosmos/gov/v1beta1/proposals/'+proposals[i].proposalId+'/tally';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let tally = JSON.parse(response.content).tally;\n                            proposal.tally = tally;\n                        }\n\n                        proposal.updatedAt = new Date();\n                        Proposals.update({proposalId: proposals[i].proposalId}, {$set:proposal});\n                    }\n                    catch(e){\n                        console.log(url);\n                        console.log(e);\n                    }\n                }\n            }\n        }\n        return true\n    }\n})\n\nconst getVoteDetail = (votes) => {\n    if (!votes) {\n        return [];\n    }\n\n    let voters = votes.map((vote) => vote.voter);\n    let votingPowerMap = {};\n    let validatorAddressMap = {};\n    Validators.find({delegator_address: {$in: voters}}).forEach((validator) => {\n        votingPowerMap[validator.delegator_address] = {\n            moniker: validator.description.moniker,\n            address: validator.address,\n            tokens: parseFloat(validator.tokens),\n            delegatorShares: parseFloat(validator.delegator_shares),\n            deductedShares: parseFloat(validator.delegator_shares)\n        }\n        validatorAddressMap[validator.operator_address] = validator.delegator_address;\n    });\n    voters.forEach((voter) => {\n        if (!votingPowerMap[voter]) {\n            // voter is not a validator\n            let url = `${API}/cosmos/staking/v1beta1/delegations/${voter}`;\n            let delegations;\n            let votingPower = 0;\n            try{\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    delegations = JSON.parse(response.content).delegation_responses;\n                    if (delegations && delegations.length > 0) {\n                        delegations.forEach((delegation) => {\n                            let shares = parseFloat(delegation.delegation.shares);\n                            if (validatorAddressMap[delegation.delegation.validator_address]) {\n                                // deduct delegated shareds from validator if a delegator votes\n                                let validator = votingPowerMap[validatorAddressMap[delegation.delegation.validator_address]];\n                                validator.deductedShares -= shares;\n                                if (parseFloat(validator.delegatorShares) != 0){ // avoiding division by zero\n                                    votingPower += (shares / parseFloat(validator.delegatorShares)) * parseFloat(validator.tokens);\n                                }\n\n                            } else {\n                                votingPower += shares\n                            }\n                        });\n                    }\n                }\n            }\n            catch (e){\n                console.log(url);\n                console.log(e);\n            }\n            votingPowerMap[voter] = {votingPower: votingPower};\n        }\n    });\n    return votes.map((vote) => {\n        let voter = votingPowerMap[vote.voter];\n        let votingPower = voter.votingPower;\n        if (votingPower == undefined) {\n            // voter is a validator\n            votingPower = voter.delegatorShares?((parseFloat(voter.deductedShares) / parseFloat(voter.delegatorShares)) * parseFloat(voter.tokens)):0;\n        }\n        return {...vote, votingPower};\n    });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Proposals } from '../proposals.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('proposals.list', function () {\n    return Proposals.find({}, {sort:{proposalId:-1}});\n});\n\nMeteor.publish('proposals.one', function (id){\n    check(id, Number);\n    return Proposals.find({proposalId:id});\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Proposals = new Mongo.Collection('proposals');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords, Analytics, AverageData, AverageValidatorData } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Status } from '../../status/status.js';\nimport { MissedBlocksStats } from '../records.js';\nimport { MissedBlocks } from '../records.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Chain } from '../../chain/chain.js';\nimport _ from 'lodash';\nconst BULKUPDATEMAXSIZE = 1000;\n\nconst getBlockStats = (startHeight, latestHeight) => {\n    let blockStats = {};\n    const cond = {$and: [\n        { height: { $gt: startHeight } },\n        { height: { $lte: latestHeight } } ]};\n    const options = {sort:{height: 1}};\n    Blockscon.find(cond, options).forEach((block) => {\n        blockStats[block.height] = {\n            height: block.height,\n            proposerAddress: block.proposerAddress,\n            precommitsCount: block.precommitsCount,\n            validatorsCount: block.validatorsCount,\n            validators: block.validators,\n            time: block.time\n        }\n    });\n\n    Analytics.find(cond, options).forEach((block) => {\n        if (!blockStats[block.height]) {\n            blockStats[block.height] = { height: block.height };\n            console.log(`block ${block.height} does not have an entry`);\n        }\n        _.assign(blockStats[block.height], {\n            precommits: block.precommits,\n            averageBlockTime: block.averageBlockTime,\n            timeDiff: block.timeDiff,\n            voting_power: block.voting_power\n        });\n    });\n    return blockStats;\n}\n\nconst getPreviousRecord = (voterAddress, proposerAddress) => {\n    let previousRecord = MissedBlocks.findOne(\n        {voter:voterAddress, proposer:proposerAddress, blockHeight: -1});\n    let lastUpdatedHeight = Meteor.settings.params.startHeight;\n    let prevStats = {};\n    if (previousRecord) {\n        prevStats = _.pick(previousRecord, ['missCount', 'totalCount']);\n    } else {\n        prevStats = {\n            missCount: 0,\n            totalCount: 0\n        }\n    }\n    return prevStats;\n}\n\nMeteor.methods({\n    'ValidatorRecords.calculateMissedBlocks': function(){\n        this.unblock();\n        if (!COUNTMISSEDBLOCKS){\n            try {\n                let startTime = Date.now();\n                COUNTMISSEDBLOCKS = true;\n                console.log('calulate missed blocks count');\n                this.unblock();\n                let validators = Validators.find({}).fetch();\n                let latestHeight = Meteor.call('blocks.getCurrentHeight');\n                let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n                let startHeight = (explorerStatus&&explorerStatus.lastProcessedMissedBlockHeight)?explorerStatus.lastProcessedMissedBlockHeight:Meteor.settings.params.startHeight;\n                latestHeight = Math.min(startHeight + BULKUPDATEMAXSIZE, latestHeight);\n                const bulkMissedStats = MissedBlocks.rawCollection().initializeOrderedBulkOp();\n\n                let validatorsMap = {};\n                validators.forEach((validator) => validatorsMap[validator.address] = validator);\n\n                // a map of block height to block stats\n                let blockStats = getBlockStats(startHeight, latestHeight);\n\n                // proposerVoterStats is a proposer-voter map counting numbers of proposed blocks of which voter is an active validator\n                let proposerVoterStats = {}\n\n                _.forEach(blockStats, (block, blockHeight) => {\n                    let proposerAddress = block.proposerAddress;\n                    let votedValidators = new Set(block.validators);\n                    let validatorSets = ValidatorSets.findOne({block_height:block.height});\n                    let votedVotingPower = 0;\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        if (votedValidators.has(activeValidator.address))\n                            votedVotingPower += parseFloat(activeValidator.voting_power)\n                    })\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        let currentValidator = activeValidator.address\n                        if (!_.has(proposerVoterStats, [proposerAddress, currentValidator])) {\n                            let prevStats = getPreviousRecord(currentValidator, proposerAddress);\n                            _.set(proposerVoterStats, [proposerAddress, currentValidator], prevStats);\n                        }\n\n                        _.update(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'], (n) => n+1);\n                        if (!votedValidators.has(currentValidator)) {\n                            _.update(proposerVoterStats, [proposerAddress, currentValidator, 'missCount'], (n) => n+1);\n                            bulkMissedStats.insert({\n                                voter: currentValidator,\n                                blockHeight: block.height,\n                                proposer: proposerAddress,\n                                precommitsCount: block.precommitsCount,\n                                validatorsCount: block.validatorsCount,\n                                time: block.time,\n                                precommits: block.precommits,\n                                averageBlockTime: block.averageBlockTime,\n                                timeDiff: block.timeDiff,\n                                votingPower: block.voting_power,\n                                votedVotingPower,\n                                updatedAt: latestHeight,\n                                missCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'missCount']),\n                                totalCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'])\n                            });\n                        }\n                    })\n                });\n\n                _.forEach(proposerVoterStats, (voters, proposerAddress) => {\n                    _.forEach(voters, (stats, voterAddress) => {\n                        bulkMissedStats.find({\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1\n                        }).upsert().updateOne({$set: {\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1,\n                            updatedAt: latestHeight,\n                            missCount: _.get(stats, 'missCount'),\n                            totalCount: _.get(stats, 'totalCount')\n                        }});\n                    });\n                });\n\n                let message = '';\n                if (bulkMissedStats.length > 0){\n                    const client = MissedBlocks._driver.mongo.client;\n                    // TODO: add transaction back after replica set(#146) is set up\n                    // let session = client.startSession();\n                    // session.startTransaction();\n                    let bulkPromise = bulkMissedStats.execute(null/*, {session}*/).then(\n                        Meteor.bindEnvironment((result, err) => {\n                            if (err){\n                                COUNTMISSEDBLOCKS = false;\n                                // Promise.await(session.abortTransaction());\n                                throw err;\n                            }\n                            if (result){\n                                // Promise.await(session.commitTransaction());\n                                message = `(${result.result.nInserted} inserted, ` +\n                                           `${result.result.nUpserted} upserted, ` +\n                                           `${result.result.nModified} modified)`;\n                            }\n                        }));\n\n                    Promise.await(bulkPromise);\n                }\n\n                COUNTMISSEDBLOCKS = false;\n                Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastProcessedMissedBlockHeight:latestHeight, lastProcessedMissedBlockTime: new Date()}});\n                return `done in ${Date.now() - startTime}ms ${message}`;\n            } catch (e) {\n                COUNTMISSEDBLOCKS = false;\n                throw e;\n            }\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'ValidatorRecords.calculateMissedBlocksStats': function(){\n        this.unblock();\n        // TODO: deprecate this method and MissedBlocksStats collection\n        // console.log(\"ValidatorRecords.calculateMissedBlocks: \"+COUNTMISSEDBLOCKS);\n        if (!COUNTMISSEDBLOCKSSTATS){\n            COUNTMISSEDBLOCKSSTATS = true;\n            console.log('calulate missed blocks stats');\n            this.unblock();\n            let validators = Validators.find({}).fetch();\n            let latestHeight = Meteor.call('blocks.getCurrentHeight');\n            let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n            let startHeight = (explorerStatus&&explorerStatus.lastMissedBlockHeight)?explorerStatus.lastMissedBlockHeight:Meteor.settings.params.startHeight;\n            // console.log(latestHeight);\n            // console.log(startHeight);\n            const bulkMissedStats = MissedBlocksStats.rawCollection().initializeUnorderedBulkOp();\n            for (i in validators){\n                // if ((validators[i].address == \"B8552EAC0D123A6BF609123047A5181D45EE90B5\") || (validators[i].address == \"69D99B2C66043ACBEAA8447525C356AFC6408E0C\") || (validators[i].address == \"35AD7A2CD2FC71711A675830EC1158082273D457\")){\n                let voterAddress = validators[i].address;\n                let missedRecords = ValidatorRecords.find({\n                    address:voterAddress,\n                    exists:false,\n                    $and: [ { height: { $gt: startHeight } }, { height: { $lte: latestHeight } } ]\n                }).fetch();\n\n                let counts = {};\n\n                // console.log(\"missedRecords to process: \"+missedRecords.length);\n                for (b in missedRecords){\n                    let block = Blockscon.findOne({height:missedRecords[b].height});\n                    let existingRecord = MissedBlocksStats.findOne({voter:voterAddress, proposer:block.proposerAddress});\n\n                    if (typeof counts[block.proposerAddress] === 'undefined'){\n                        if (existingRecord){\n                            counts[block.proposerAddress] = existingRecord.count+1;\n                        }\n                        else{\n                            counts[block.proposerAddress] = 1;\n                        }\n                    }\n                    else{\n                        counts[block.proposerAddress]++;\n                    }\n                }\n\n                for (address in counts){\n                    let data = {\n                        voter: voterAddress,\n                        proposer:address,\n                        count: counts[address]\n                    }\n\n                    bulkMissedStats.find({voter:voterAddress, proposer:address}).upsert().updateOne({$set:data});\n                }\n                // }\n\n            }\n\n            if (bulkMissedStats.length > 0){\n                bulkMissedStats.execute(Meteor.bindEnvironment((err, result) => {\n                    if (err){\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(err);\n                    }\n                    if (result){\n                        Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastMissedBlockHeight:latestHeight, lastMissedBlockTime: new Date()}});\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(\"done\");\n                    }\n                }));\n            }\n            else{\n                COUNTMISSEDBLOCKSSTATS = false;\n            }\n\n            return true;\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'Analytics.aggregateBlockTimeAndVotingPower': function(time){\n        this.unblock();\n        let now = new Date();\n\n        if (time == 'm'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastMinuteVotingPower:averageVotingPower, lastMinuteBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n        if (time == 'h'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastHourVotingPower:averageVotingPower, lastHourBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        if (time == 'd'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastDayVotingPower:averageVotingPower, lastDayBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        // return analytics.length;\n    },\n    'Analytics.aggregateValidatorDailyBlockTime': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let now = new Date();\n        for (i in validators){\n            let averageBlockTime = 0;\n\n            let blocks = Blockscon.find({proposerAddress:validators[i].address, \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) }}, {fields:{height:1}}).fetch();\n\n            if (blocks.length > 0){\n                let blockHeights = [];\n                for (b in blocks){\n                    blockHeights.push(blocks[b].height);\n                }\n\n                let analytics = Analytics.find({height: {$in:blockHeights}}, {fields:{height:1,timeDiff:1}}).fetch();\n\n\n                for (a in analytics){\n                    averageBlockTime += analytics[a].timeDiff;\n                }\n\n                averageBlockTime = averageBlockTime / analytics.length;\n            }\n\n            AverageValidatorData.insert({\n                proposerAddress: validators[i].address,\n                averageBlockTime: averageBlockTime,\n                type: 'ValidatorDailyAverageBlockTime',\n                createdAt: now\n            })\n        }\n\n        return true;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatorRecords, Analytics, MissedBlocks, MissedBlocksStats, VPDistributions } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('validator_records.all', function () {\n    return ValidatorRecords.find();\n});\n\nMeteor.publish('validator_records.uptime', function(address, num){\n    return ValidatorRecords.find({address:address},{limit:num, sort:{height:-1}});\n});\n\nMeteor.publish('analytics.history', function(){\n    return Analytics.find({},{sort:{height:-1},limit:50});\n});\n\nMeteor.publish('vpDistribution.latest', function(){\n    return VPDistributions.find({},{sort:{height:-1}, limit:1});\n});\n\npublishComposite('missedblocks.validator', function(address, type){\n    let conditions = {};\n    if (type == 'voter'){\n        conditions = {\n            voter: address\n        }\n    }\n    else{\n        conditions = {\n            proposer: address\n        }\n    }\n    return {\n        find(){\n            return MissedBlocksStats.find(conditions)\n        },\n        children: [\n            {\n                find(stats){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, profile_url:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('missedrecords.validator', function(address, type){\n    return {\n        find(){\n            return MissedBlocks.find(\n                {[type]: address},\n                {sort: {updatedAt: -1}}\n            )\n        },\n        children: [\n            {\n                find(){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, operatorAddress:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators';\n\nexport const ValidatorRecords = new Mongo.Collection('validator_records');\nexport const Analytics = new Mongo.Collection('analytics');\nexport const MissedBlocksStats = new Mongo.Collection('missed_blocks_stats');\nexport const MissedBlocks = new  Mongo.Collection('missed_blocks');\nexport const VPDistributions = new Mongo.Collection('voting_power_distributions');\nexport const AverageData = new Mongo.Collection('average_data');\nexport const AverageValidatorData = new Mongo.Collection('average_validator_data');\n\nMissedBlocksStats.helpers({\n    proposerMoniker(){\n        let validator = Validators.findOne({address:this.proposer});\n        return (validator.description)?validator.description.moniker:this.proposer;\n    },\n    voterMoniker(){\n        let validator = Validators.findOne({address:this.voter});\n        return (validator.description)?validator.description.moniker:this.voter;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Status } from '../status.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('status.status', function () {\n    return Status.find({chainId:Meteor.settings.public.chainId});\n});\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Status = new Mongo.Collection('status');","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Validators } from '../../validators/validators.js';\n\nconst AddressLength = 40;\n\nMeteor.methods({\n    'Transactions.updateTransactions': async function(){\n        this.unblock();\n        if (TXSYNCING)\n            return \"Syncing transactions...\";\n\n        const transactions = Transactions.find({processed:false},{limit: 500}).fetch();\n        try{\n            TXSYNCING = true;\n            const bulkTransactions = Transactions.rawCollection().initializeUnorderedBulkOp();\n            for (let i in transactions){\n                let url = \"\";\n                try {\n                    url = API+ '/cosmos/tx/v1beta1/txs/'+transactions[i].txhash;\n                    let response = HTTP.get(url);\n                    let tx = JSON.parse(response.content);\n\n                    tx.height = parseInt(tx.tx_response.height);\n                    tx.processed = true;\n\n                    bulkTransactions.find({txhash:transactions[i].txhash}).updateOne({$set:tx});\n\n                }\n                catch(e) {\n                    // console.log(url);\n                    // console.log(\"tx not found: %o\")\n                    console.log(\"Getting transaction %o: %o\", transactions[i].txhash, e);\n                    bulkTransactions.find({txhash:transactions[i].txhash}).updateOne({$set:{processed:true, missing:true}});                    \n                }\n            }\n            if (bulkTransactions.length > 0){\n                console.log(\"aaa: %o\",bulkTransactions.length)\n                bulkTransactions.execute((err, result) => {\n                    if (err){\n                        console.log(err);\n                    }\n                    if (result){\n                        console.log(result);\n                    }\n                });\n            }\n        }\n        catch (e) {\n            TXSYNCING = false;\n            return e\n        }\n        TXSYNCING = false;\n        return transactions.length\n    },\n    'Transactions.findDelegation': function(address, height){\n        this.unblock();\n        // following cosmos-sdk/x/slashing/spec/06_events.md and cosmos-sdk/x/staking/spec/06_events.md\n        return Transactions.find({\n            $or: [{$and: [\n                {\"tx_response.logs.events.type\": \"delegate\"},\n                {\"tx_response.logs.events.attributes.key\": \"validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.attributes.key\": \"action\"},\n                {\"tx_response.logs.events.attributes.value\": \"unjail\"},\n                {\"tx_response.logs.events.attributes.key\": \"sender\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.type\": \"create_validator\"},\n                {\"tx_response.logs.events.attributes.key\": \"validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.type\": \"unbond\"},\n                {\"tx_response.logs.events.attributes.key\": \"validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}, {$and:[\n                {\"tx_response.logs.events.type\": \"redelegate\"},\n                {\"tx_response.logs.events.attributes.key\": \"destination_validator\"},\n                {\"tx_response.logs.events.attributes.value\": address}\n            ]}],\n            \"tx_response.code\": 0,\n            height:{$lt:height}},\n        {sort:{height:-1},\n            limit: 1}\n        ).fetch();\n    },\n    'Transactions.findUser': function(address, fields=null){\n        this.unblock();\n        // address is either delegator address or validator operator address\n        let validator;\n        if (!fields)\n            fields = {address:1, description:1, operator_address:1, delegator_address:1};\n        if (address.includes(Meteor.settings.public.bech32PrefixValAddr)){\n            // validator operator address\n            validator = Validators.findOne({operator_address:address}, {fields});\n        }\n        else if (address.includes(Meteor.settings.public.bech32PrefixAccAddr)){\n            // delegator address\n            validator = Validators.findOne({delegator_address:address}, {fields});\n        }\n        else if (address.length === AddressLength) {\n            validator = Validators.findOne({address:address}, {fields});\n        }\n        if (validator){\n            return validator;\n        }\n        return false;\n\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\n\n\npublishComposite('transactions.list', function(limit = 30){\n    return {\n        find(){\n            return Transactions.find({height: { $exists: true}, processed: {$ne: false}},{sort:{height:-1}, limit:limit})\n        },\n        children: [\n            {\n                find(tx){\n                    if (tx.height)\n                        return Blockscon.find(\n                            {height:tx.height},\n                            {fields:{time:1, height:1}}\n                        )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('transactions.validator', function(validatorAddress, delegatorAddress, limit=100){\n    let query = {};\n    if (validatorAddress && delegatorAddress){\n        query = {$or:[{\"tx_response.logs.events.attributes.value\":validatorAddress}, {\"tx_response.logs.events.attributes.value\":delegatorAddress}]}\n    }\n\n    if (!validatorAddress && delegatorAddress){\n        query = {\"tx_response.logs.events.attributes.value\":delegatorAddress}\n    }\n\n    return {\n        find(){\n            return Transactions.find(query, {sort:{height:-1}, limit:limit})\n        },\n        children:[\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.findOne', function(hash){\n    return {\n        find(){\n            return Transactions.find({txhash:hash})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.height', function(height){\n    return {\n        find(){\n            return Transactions.find({height:height})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})","import { Mongo } from 'meteor/mongo';\nimport { Blockscon } from '../blocks/blocks.js';\nimport { TxIcon } from '../../ui/components/Icons.jsx';\n\nexport const Transactions = new Mongo.Collection('transactions');\n\nTransactions.helpers({\n    block(){\n        return Blockscon.findOne({height:this.height});\n    }\n})","/* eslint-disable camelcase */\n\nimport { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Chain } from '../../chain/chain.js';\nimport { getValidatorProfileUrl } from '../../blocks/server/methods.js';\n\n\nMeteor.methods({\n    'Validators.findCreateValidatorTime': function(address){\n        this.unblock();\n        // look up the create validator time to consider if the validator has never updated the commission\n        let tx = Transactions.findOne({$and:[\n            {\"tx.body.messages.delegator_address\":address},\n            {\"tx.body.messages.@type\":\"/cosmos.staking.v1beta1.MsgCreateValidator\"},\n            {\"tx_response.code\":0}\n        ]});\n\n        if (tx){\n            let block = Blockscon.findOne({height:tx.height});\n            if (block){\n                return block.time;\n            }\n        }\n        else{\n            // no such create validator tx\n            return false;\n        }\n    },\n    'Validators.getAllDelegations'(address){\n        this.unblock();\n        let url = `${API}/cosmos/staking/v1beta1/validators/${address}/delegations?pagination.limit=10&pagination.count_total=true`;\n\n        try {\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200) {\n                let delegationsCount = JSON.parse(delegations.content)?.pagination?.total;\n                return delegationsCount;\n            };\n        }\n        catch (e) {\n            console.log(url);\n            console.log(\"Getting error: %o when getting delegations count from %o\", e, url);\n        }\n    },\n\n    'Validators.fetchKeybase'(address) {\n        this.unblock();\n        // fetching keybase every base on keybaseFetchingInterval settings\n        // default to every 5 hours \n        \n        let url = RPC + '/status';\n        let chainId;\n        try {\n            let response = HTTP.get(url);\n            let status = JSON.parse(response?.content);\n            chainId = (status?.result?.node_info?.network);\n        }\n        catch (e) {\n            console.log(\"Error getting chainId for keybase fetching\")        \n        }\n        let chainStatus = Chain.findOne({ chainId});\n        const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n\n        let lastKeybaseFetchTime = Date.parse(chainStatus?.lastKeybaseFetchTime) ?? 0\n        console.log(\"Last fetch time: %o\", lastKeybaseFetchTime)\n\n        console.log('Fetching keybase...')\n        // eslint-disable-next-line no-loop-func\n        Validators.find({}).forEach(async (validator) => {\n            try {\n                if (validator?.description && validator?.description?.identity) {\n                    let profileUrl = getValidatorProfileUrl(validator?.description?.identity)\n                    if (profileUrl) {\n                        bulkValidators.find({ address: validator?.address }).upsert().updateOne({ $set: { 'profile_url': profileUrl } });\n                        if (bulkValidators.length > 0) {\n                            bulkValidators.execute((err, result) => {\n                                if (err) {\n                                    console.log(`Error when updating validator profile_url ${err}`);\n                                }\n                                if (result) {\n                                    console.log('Validator profile_url has been updated!');\n                                }\n                            });\n                        }\n                    }\n                }\n            } catch (e) {\n                console.log(\"Error fetching Keybase for %o: %o\", validator?.address, e)\n            }\n        })\n        try{\n            Chain.update({ chainId }, { $set: { lastKeybaseFetchTime: new Date().toUTCString() } });\n        }\n        catch(e){\n            console.log(\"Error when updating lastKeybaseFetchTime\")\n        }\n\n    }    \n\n});","import { Meteor } from 'meteor/meteor';\nimport { Validators } from '../validators.js';\nimport { ValidatorRecords } from '../../records/records.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nMeteor.publish('validators.all', function (sort = \"description.moniker\", direction = -1, fields={}) {\n    return Validators.find({}, {sort: {[sort]: direction}, fields: fields});\n});\n\npublishComposite('validators.firstSeen',{\n    find() {\n        return Validators.find({});\n    },\n    children: [\n        {\n            find(val) {\n                return ValidatorRecords.find(\n                    { address: val.address },\n                    { sort: {height: 1}, limit: 1}\n                );\n            }\n        }\n    ]\n});\n\nMeteor.publish('validators.voting_power', function(){\n    return Validators.find({\n        status: 'BOND_STATUS_BONDED',\n        jailed:false\n    },{\n        sort:{\n            voting_power:-1\n        },\n        fields:{\n            address: 1,\n            description:1,\n            voting_power:1,\n            profile_url:1\n        }\n    }\n    );\n});\n\npublishComposite('validator.details', function(address){\n    let options = {address:address};\n    if (address.indexOf(Meteor.settings.public.bech32PrefixValAddr) != -1){\n        options = {operator_address:address}\n    }\n    return {\n        find(){\n            return Validators.find(options)\n        },\n        children: [\n            {\n                find(val){\n                    return VotingPowerHistory.find(\n                        {address:val.address},\n                        {sort:{height:-1}, limit:50}\n                    )\n                }\n            },\n            {\n                find(val) {\n                    return ValidatorRecords.find(\n                        { address: val.address },\n                        { sort: {height: -1}, limit: Meteor.settings.public.uptimeWindow}\n                    );\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords } from '../records/records.js';\nimport { VotingPowerHistory } from '../voting-power/history.js';\n\nexport const Validators = new Mongo.Collection('validators');\n\nValidators.helpers({\n    firstSeen(){\n        return ValidatorRecords.findOne({address:this.address});\n    },\n    history(){\n        return VotingPowerHistory.find({address:this.address}, {sort:{height:-1}, limit:50}).fetch();\n    }\n})\n// Validators.helpers({\n//     uptime(){\n//         // console.log(this.address);\n//         let lastHundred = ValidatorRecords.find({address:this.address}, {sort:{height:-1}, limit:100}).fetch();\n//         console.log(lastHundred);\n//         let uptime = 0;\n//         for (i in lastHundred){\n//             if (lastHundred[i].exists){\n//                 uptime+=1;\n//             }\n//         }\n//         return uptime;\n//     }\n// })","import { Mongo } from 'meteor/mongo';\n\nexport const VotingPowerHistory = new Mongo.Collection('voting_power_history');\n","import { Mongo } from 'meteor/mongo';\n\nexport const Evidences = new Mongo.Collection('evidences');\n","import { Mongo } from 'meteor/mongo';\n\nexport const ValidatorSets = new Mongo.Collection('validator_sets');\n","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","import { Blockscon } from '../../api/blocks/blocks.js';\nimport { Proposals } from '../../api/proposals/proposals.js';\nimport { ValidatorRecords, Analytics, MissedBlocksStats, MissedBlocks, AverageData, AverageValidatorData } from '../../api/records/records.js';\n// import { Status } from '../../api/status/status.js';\nimport { Transactions } from '../../api/transactions/transactions.js';\nimport { ValidatorSets } from '../../api/validator-sets/validator-sets.js';\nimport { Validators } from '../../api/validators/validators.js';\nimport { VotingPowerHistory } from '../../api/voting-power/history.js';\nimport { Evidences } from '../../api/evidences/evidences.js';\nimport { CoinStats } from '../../api/coin-stats/coin-stats.js';\nimport { ChainStates } from '../../api/chain/chain.js';\n\nChainStates.rawCollection().createIndex({height: -1},{unique:true});\n\nBlockscon.rawCollection().createIndex({height: -1},{unique:true});\nBlockscon.rawCollection().createIndex({proposerAddress:1});\n\nEvidences.rawCollection().createIndex({height: -1});\n\nProposals.rawCollection().createIndex({proposalId: 1}, {unique:true});\n\nValidatorRecords.rawCollection().createIndex({address:1,height: -1}, {unique:1});\nValidatorRecords.rawCollection().createIndex({address:1,exists:1, height: -1});\n\nAnalytics.rawCollection().createIndex({height: -1}, {unique:true})\n\nMissedBlocks.rawCollection().createIndex({proposer:1, voter:1, updatedAt: -1});\nMissedBlocks.rawCollection().createIndex({proposer:1, blockHeight:-1});\nMissedBlocks.rawCollection().createIndex({voter:1, blockHeight:-1});\nMissedBlocks.rawCollection().createIndex({voter:1, proposer:1, blockHeight:-1}, {unique:true});\n\nMissedBlocksStats.rawCollection().createIndex({proposer:1});\nMissedBlocksStats.rawCollection().createIndex({voter:1});\nMissedBlocksStats.rawCollection().createIndex({proposer:1, voter:1},{unique:true});\n\nAverageData.rawCollection().createIndex({type:1, createdAt:-1},{unique:true});\nAverageValidatorData.rawCollection().createIndex({proposerAddress:1,createdAt:-1},{unique:true});\n// Status.rawCollection.createIndex({})\n\nTransactions.rawCollection().createIndex({txhash:1},{unique:true});\nTransactions.rawCollection().createIndex({height:-1});\nTransactions.rawCollection().createIndex({processed:1});\n// Transactions.rawCollection().createIndex({action:1});\nTransactions.rawCollection().createIndex({\"tx_response.logs.events.attributes.key\":1});\nTransactions.rawCollection().createIndex({\"tx_response.logs.events.attributes.value\":1});\nTransactions.rawCollection().createIndex({\n    \"tx.body.messages.delegator_address\":1,\n    \"tx.body.messages.@type\":1,\n    \"tx_response.code\": 1\n},{partialFilterExpression: {\"tx_response.code\":{$exists: true}}})\n\nValidatorSets.rawCollection().createIndex({block_height:-1});\n\nValidators.rawCollection().createIndex({address:1},{unique:true, partialFilterExpression: { address: { $exists: true } } });\n// Validators.rawCollection().createIndex({consensusPubkey:1},{unique:true});\nValidators.rawCollection().createIndex({\"consensusPubkey.value\":1},{unique:true, partialFilterExpression: { \"consensusPubkey.value\": { $exists: true } }});\n\nVotingPowerHistory.rawCollection().createIndex({address:1,height:-1});\nVotingPowerHistory.rawCollection().createIndex({type:1});\n\nCoinStats.rawCollection().createIndex({last_updated_at:-1},{unique:true});\n","// Import server startup through a single index entry point\n\nimport './util.js';\nimport './register-api.js';\nimport './create-indexes.js';\n\n// import React from 'react';\n// import { renderToNodeStream } from 'react-dom/server';\n// import { renderToString } from \"react-dom/server\";\nimport { onPageLoad } from 'meteor/server-render';\n// import { StaticRouter } from 'react-router-dom';\n// import { ServerStyleSheet } from \"styled-components\"\nimport { Helmet } from 'react-helmet';\n\n// import App from '../../ui/App.jsx';\n\nonPageLoad(sink => {\n    // const context = {};\n    // const sheet = new ServerStyleSheet()\n\n    // const html = renderToString(sheet.collectStyles(\n    //     <StaticRouter location={sink.request.url} context={context}>\n    //         <App />\n    //     </StaticRouter>\n    //   ));\n\n    // sink.renderIntoElementById('app', html);\n\n    const helmet = Helmet.renderStatic();\n    sink.appendToHead(helmet.meta.toString());\n    sink.appendToHead(helmet.title.toString());\n\n    // sink.appendToHead(sheet.getStyleTags());\n});","// Register your apis here\n\nimport '../../api/ledger/server/methods.js';\n\nimport '../../api/chain/server/methods.js';\nimport '../../api/chain/server/publications.js';\n\nimport '../../api/blocks/server/methods.js';\nimport '../../api/blocks/server/publications.js';\n\nimport '../../api/validators/server/methods.js';\nimport '../../api/validators/server/publications.js';\n\nimport '../../api/records/server/methods.js';\nimport '../../api/records/server/publications.js';\n\nimport '../../api/proposals/server/methods.js';\nimport '../../api/proposals/server/publications.js';\n\nimport '../../api/voting-power/server/publications.js';\n\nimport '../../api/transactions/server/methods.js';\nimport '../../api/transactions/server/publications.js';\n\nimport '../../api/delegations/server/methods.js';\nimport '../../api/delegations/server/publications.js';\n\nimport '../../api/status/server/publications.js';\n\nimport '../../api/accounts/server/methods.js';\n\nimport '../../api/coin-stats/server/methods.js';\n","import bech32 from 'bech32'\nimport { HTTP } from 'meteor/http';\nimport * as cheerio from 'cheerio';\nimport { tmhash } from 'tendermint/lib/hash'\n\nMeteor.methods({\n    hexToBech32: function(address, prefix) {\n        let addressBuffer = Buffer.from(address, 'hex');\n        // let buffer = Buffer.alloc(37)\n        // addressBuffer.copy(buffer);\n        return bech32.encode(prefix, bech32.toWords(addressBuffer));\n    },\n    pubkeyToBech32Old: function(pubkey, prefix) {\n        let buffer;\n\n        try {\n            if (pubkey.type.indexOf(\"Ed25519\") > 0){\n            // '1624DE6420' is ed25519 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex');\n                buffer = Buffer.alloc(37);\n        \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else if (pubkey.type.indexOf(\"Secp256k1\") > 0){\n            // 'EB5AE98721' is secp256k1 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('EB5AE98721', 'hex');\n                buffer = Buffer.alloc(38);\n    \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else {\n                console.log(\"Pubkey type not supported.\");\n                return false;\n            }\n\n            return bech32.encode(prefix, bech32.toWords(buffer))\n        }\n        catch (e){\n            console.log(\"Error converting from pubkey to bech32: %o\\n %o\", pubkey, e);\n            return false\n        }\n    },\n    pubkeyToBech32: function(pubkey, prefix) {\n        let buffer;\n\n        try {\n            if (pubkey[\"@type\"].indexOf(\"ed25519\") > 0){\n            // '1624DE6420' is ed25519 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex');\n                buffer = Buffer.alloc(37);\n        \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.key, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else if (pubkey[\"@type\"].indexOf(\"secp256k1\") > 0){\n            // 'EB5AE98721' is secp256k1 pubkey prefix\n                let pubkeyAminoPrefix = Buffer.from('EB5AE98721', 'hex');\n                buffer = Buffer.alloc(38);\n    \n                pubkeyAminoPrefix.copy(buffer, 0)\n                Buffer.from(pubkey.key, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n            }\n            else {\n                console.log(\"Pubkey type not supported.\");\n                return false;\n            }\n\n            return bech32.encode(prefix, bech32.toWords(buffer))\n        }\n        catch (e){\n            console.log(\"Error converting from pubkey to bech32: %o\\n %o\", pubkey, e);\n            return false\n        }\n    },\n    bech32ToPubkey: function(pubkey, type) {\n        // type can only be either 'tendermint/PubKeySecp256k1' or 'tendermint/PubKeyEd25519'\n        let pubkeyAminoPrefix, buffer;\n\n        try {\n            if (type.indexOf(\"ed25519\") > 0){\n            // '1624DE6420' is ed25519 pubkey prefix\n                pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n                buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n            }\n            else if (type.indexOf(\"secp256k1\") > 0){\n            // 'EB5AE98721' is secp256k1 pubkey prefix\n                pubkeyAminoPrefix = Buffer.from('EB5AE98721', 'hex')\n                buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n            }\n            else {\n                console.log(\"Pubkey type not supported.\");\n                return false;\n            }\n        \n            return buffer.slice(pubkeyAminoPrefix.length).toString('base64');\n        }\n        catch (e){\n            console.log(\"Error converting from bech32 to pubkey: %o\\n %o\", pubkey, e);\n            return false\n        }\n    },\n    getAddressFromPubkey: function(pubkey){\n        var bytes = Buffer.from(pubkey.key, 'base64');\n        return tmhash(bytes).slice(0, 20).toString('hex').toUpperCase();\n    },\n    getDelegator: function(operatorAddr){\n        let address = bech32.decode(operatorAddr);\n        return bech32.encode(Meteor.settings.public.bech32PrefixAccAddr, address.words);\n    },\n    getKeybaseTeamPic: function(keybaseUrl){\n        let teamPage = HTTP.get(keybaseUrl);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        }\n    },\n    getVersion: function(){\n        const version = Assets.getText('version');\n        return version ? version : 'beta'\n    }\n})\n","import React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nexport const DenomSymbol = (props) => {\n    switch (props.denom){\n    case \"steak\":\n        return '🥩';\n    default:\n        return '🍅';\n    }\n}\n\n\nexport const ProposalStatusIcon = (props) => {\n    switch (props.status){\n    case 'PROPOSAL_STATUS_PASSED':\n        return <i className=\"fas fa-check-circle text-success\"></i>;\n    case 'PROPOSAL_STATUS_REJECTED':\n        return <i className=\"fas fa-times-circle text-danger\"></i>;\n    case 'PROPOSAL_STATUS_REMOVED':\n        return <i className=\"fas fa-trash-alt text-dark\"></i>\n    case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n        return <i className=\"fas fa-battery-half text-warning\"></i>;\n    case 'PROPOSAL_STATUS_VOTING_PERIOD':\n        return <i className=\"fas fa-hand-paper text-info\"></i>;\n    default:\n        return <i></i>;\n    }\n}\n\nexport const VoteIcon = (props) => {\n    switch (props.vote){\n    case 'yes':\n        return <i className=\"fas fa-check text-success\"></i>;\n    case 'no':\n        return <i className=\"fas fa-times text-danger\"></i>;\n    case 'abstain':\n        return <i className=\"fas fa-user-slash text-warning\"></i>;\n    case 'no_with_veto':\n        return <i className=\"fas fa-exclamation-triangle text-info\"></i>;\n    default:\n        return <i></i>;\n    }\n}\n\nexport const TxIcon = (props) => {\n    if (props.valid){\n        return <span className=\"text-success text-nowrap\"><i className=\"fas fa-check-circle\"></i></span>;\n    }\n    else{\n        return <span className=\"text-danger text-nowrap\"><i className=\"fas fa-times-circle\"></i></span>;\n    }\n}\n\nexport class InfoIcon extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    render() {\n        return [\n            <i key='icon' className='material-icons info-icon' ref={this.ref}>info</i>,\n            <UncontrolledTooltip key='tooltip' placement='right' target={this.ref}>\n                {this.props.children?this.props.children:this.props.tooltipText}\n            </UncontrolledTooltip>\n        ]\n    }\n}","/* eslint-disable no-tabs */\nimport { Meteor } from 'meteor/meteor';\nimport numbro from 'numbro';\n\nautoformat = (value) => {\n    let formatter = '0,0.0000';\n    value = Math.round(value * 1000) / 1000\n    if (Math.round(value) === value)\n        formatter = '0,0'\n    else if (Math.round(value*10) === value*10)\n        formatter = '0,0.0'\n    else if (Math.round(value*100) === value*100)\n        formatter = '0,0.00'\n    else if (Math.round(value*1000) === value*1000)\n        formatter = '0,0.000'\n    return numbro(value).format(formatter)\n}\n\nconst coinList = Meteor.settings.public.coins;\n\nexport default class Coin {\nstatic StakingCoin = coinList.find(coin => coin.denom === Meteor.settings.public.bondDenom);\nstatic MinStake = 1 / Number(Coin.StakingCoin.fraction);\n\nconstructor(amount, denom=Meteor.settings.public.bondDenom) {\n    const lowerDenom = denom.toLowerCase();\n    this._coin = coinList.find(coin =>\n        coin.denom.toLowerCase() === lowerDenom || coin.displayName.toLowerCase() === lowerDenom\n    );\n\n    if (this._coin){\n        if (lowerDenom === this._coin.denom.toLowerCase()) {\n            this._amount = Number(amount);\n        } else if (lowerDenom === this._coin.displayName.toLowerCase()) {\n            this._amount = Number(amount) * this._coin.fraction;\n        }\n    }\n    else {\n        this._coin = \"\";\n        this._amount = Number(amount);\n    }\n}\n\nget amount () {\n    return this._amount;\n}\n\nget stakingAmount () {\n    return (this._coin)?this._amount / this._coin.fraction:this._amount;\n}\n\ntoString (precision) {\n    // default to display in mint denom if it has more than 4 decimal places\n    let minStake = Coin.StakingCoin.fraction/(precision?(10 ** precision):10000)\n    if (this.amount === 0) {\n        return `0 ${this._coin.displayName}`\n    }\n    else if (this.amount < minStake) {\n        return `${numbro(this.amount).format('0,0.000000' )} ${this._coin.denom}`;\n    }\n    else if (!this._coin.displayName){\n        return `${this.stakingAmount ?? 0} ${Coin.StakingCoin.displayName}`\n    }\n    else if (this.amount % 1 === 0){\n        return `${this.stakingAmount} ${this._coin.displayName}`\n    }\n    else {\n        return `${precision?numbro(this.stakingAmount).format('0,0.' + '0'.repeat(precision)):autoformat(this.stakingAmount)} ${this._coin.displayName}`\n    }\n}\n}","import React from 'react';\nimport { DisappearedLoading } from 'react-loadingg';\n\nconst Loader = () => <div><DisappearedLoading color=\"#bd081c\" size=\"sm\"/></div>;\n\nexport default Loader;","export const goTimeToISOString = (time) => {\n    const millisecond = parseInt(time.seconds+time.nanos.toString().substring(0,3));\n    return (new Date(millisecond)).toISOString()\n}","// Server entry point, imports all server code\n\nimport '/imports/startup/server';\nimport '/imports/startup/both';\n// import moment from 'moment';\n// import '/imports/api/blocks/blocks.js';\n\nSYNCING = false;\nTXSYNCING = false;\nCOUNTMISSEDBLOCKS = false;\nCOUNTMISSEDBLOCKSSTATS = false;\nRPC = Meteor.settings.remote.rpc;\nAPI = Meteor.settings.remote.api;\n\ntimerBlocks = 0;\ntimerTransactions = 0;\ntimerChain = 0;\ntimerConsensus = 0;\ntimerProposal = 0;\ntimerProposalsResults = 0;\ntimerMissedBlock = 0;\ntimerDelegation = 0;\ntimerAggregate = 0;\ntimerFetchKeybase = 0;\n\nconst DEFAULTSETTINGS = '/default_settings.json';\n\nupdateChainStatus = () => {\n    Meteor.call('chain.updateStatus', (error, result) => {\n        if (error){\n            console.log(\"updateStatus: %o\", error);\n        }\n        else{\n            console.log(\"updateStatus: %o\", result);\n        }\n    })\n}\n\nupdateBlock = () => {\n    Meteor.call('blocks.blocksUpdate', (error, result) => {\n        if (error){\n            console.log(\"updateBlocks: %o\", error);\n        }\n        else{\n            console.log(\"updateBlocks: %o\", result);\n        }\n    })\n}\n\nupdateTransactions = () => {\n    Meteor.call('Transactions.updateTransactions', (error, result) => {\n        if (error){\n            console.log(\"updateTransactions: %o\",error);\n        }\n        else{\n            console.log(\"updateTransactions: %o\",result);\n        }\n    })\n}\n\ngetConsensusState = () => {\n    Meteor.call('chain.getConsensusState', (error, result) => {\n        if (error){\n            console.log(\"get consensus: %o\", error)\n        }\n    })\n}\n\ngetProposals = () => {\n    Meteor.call('proposals.getProposals', (error, result) => {\n        if (error){\n            console.log(\"get proposal: %o\", error);\n        }\n        if (result){\n            console.log(\"get proposal: %o\", result);\n        }\n    });\n}\n\ngetProposalsResults = () => {\n    Meteor.call('proposals.getProposalResults', (error, result) => {\n        if (error){\n            console.log(\"get proposals result: %o\", error);\n        }\n        if (result){\n            console.log(\"get proposals result: %o\", result);\n        }\n    });\n}\n\nupdateMissedBlocks = () => {\n    Meteor.call('ValidatorRecords.calculateMissedBlocks', (error, result) =>{\n        if (error){\n            console.log(\"missed blocks error: %o\", error)\n        }\n        if (result){\n            console.log(\"missed blocks ok: %o\", result);\n        }\n    });\n}\n\nfetchKeybase = () => {\n    Meteor.call('Validators.fetchKeybase', (error, result) => {\n        if (error) {\n            console.log(\"Error when fetching Keybase\" + error)\n        }\n        if (result) {\n            console.log(\"Keybase profile_url updated \", result);\n        }\n    });\n}\n\ngetDelegations = () => {\n    Meteor.call('delegations.getDelegations', (error, result) => {\n        if (error){\n            console.log(\"get delegations error: %o\", error)\n        }\n        else{\n            console.log(\"get delegations ok: %o\", result)\n        }\n    });\n}\n\naggregateMinutely = () =>{\n    // doing something every min\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"m\", (error, result) => {\n        if (error){\n            console.log(\"aggregate minutely block time error: %o\", error)\n        }\n        else{\n            console.log(\"aggregate minutely block time ok: %o\", result)\n        }\n    });\n\n    Meteor.call('coinStats.getCoinStats', (error, result) => {\n        if (error){\n            console.log(\"get coin stats error: %o\", error);\n        }\n        else{\n            console.log(\"get coin stats ok: %o\", result)\n        }\n    });\n}\n\naggregateHourly = () =>{\n    // doing something every hour\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"h\", (error, result) => {\n        if (error){\n            console.log(\"aggregate hourly block time error: %o\", error)\n        }\n        else{\n            console.log(\"aggregate hourly block time ok: %o\", result)\n        }\n    });\n}\n\naggregateDaily = () =>{\n    // doing somthing every day\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"d\", (error, result) => {\n        if (error){\n            console.log(\"aggregate daily block time error: %o\", error)\n        }\n        else{\n            console.log(\"aggregate daily block time ok: %o\", result)\n        }\n    });\n\n    Meteor.call('Analytics.aggregateValidatorDailyBlockTime', (error, result) => {\n        if (error){\n            console.log(\"aggregate validators block time error: %o\", error)\n        }\n        else {\n            console.log(\"aggregate validators block time ok: %o\", result);\n        }\n    })\n}\n\n\n\nMeteor.startup(async function(){\n    if (Meteor.isDevelopment){\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n        import DEFAULTSETTINGSJSON from '../default_settings.json'\n        Object.keys(DEFAULTSETTINGSJSON).forEach((key) => {\n            if (Meteor.settings[key] == undefined) {\n                console.warn(`CHECK SETTINGS JSON: ${key} is missing from settings`)\n                Meteor.settings[key] = {};\n            }\n            Object.keys(DEFAULTSETTINGSJSON[key]).forEach((param) => {\n                if (Meteor.settings[key][param] == undefined){\n                    console.warn(`CHECK SETTINGS JSON: ${key}.${param} is missing from settings`)\n                    Meteor.settings[key][param] = DEFAULTSETTINGSJSON[key][param]\n                }\n            })\n        })\n    }\n\n    if (Meteor.settings.debug.startTimer){\n        timerConsensus = Meteor.setInterval(function(){\n            getConsensusState();\n        }, Meteor.settings.params.consensusInterval);\n\n        timerBlocks = Meteor.setInterval(function(){\n            updateBlock();\n        }, Meteor.settings.params.blockInterval);\n\n        timerTransactions = Meteor.setInterval(function(){\n            updateTransactions();\n        }, Meteor.settings.params.transactionsInterval);\n\n        timerChain = Meteor.setInterval(function(){\n            updateChainStatus();\n        }, Meteor.settings.params.statusInterval);\n\n        if (Meteor.settings.public.modules.gov){\n            timerProposal = Meteor.setInterval(function (){\n                getProposals();\n            }, Meteor.settings.params.proposalInterval);\n\n            timerProposalsResults = Meteor.setInterval(function (){\n                getProposalsResults();\n            }, Meteor.settings.params.proposalInterval);\n        }\n\n        timerMissedBlock = Meteor.setInterval(function(){\n            updateMissedBlocks();\n        }, Meteor.settings.params.missedBlocksInterval);\n\n        timerFetchKeybase = Meteor.setInterval(function (){\n            fetchKeybase();\n        }, Meteor.settings.params.keybaseFetchingInterval);\n\n        // timerDelegation = Meteor.setInterval(function(){\n        //     getDelegations();\n        // }, Meteor.settings.params.delegationInterval);\n\n        timerAggregate = Meteor.setInterval(function(){\n            let now = new Date();\n            if ((now.getUTCSeconds() == 0)){\n                aggregateMinutely();\n            }\n\n            if ((now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)){\n                aggregateHourly();\n            }\n\n            if ((now.getUTCHours() == 0) && (now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)){\n                aggregateDaily();\n            }\n        }, 1000)\n    }\n});"]}