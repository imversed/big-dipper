"use strict";
/**
 * Copyright 2014-present Palantir Technologies
 * @license MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var canvasDrawer_1 = require("./canvasDrawer");
var svgDrawer_1 = require("./svgDrawer");
var AreaSVGDrawer = /** @class */ (function (_super) {
    tslib_1.__extends(AreaSVGDrawer, _super);
    function AreaSVGDrawer() {
        return _super.call(this, "path", "area") || this;
    }
    AreaSVGDrawer.prototype._applyDefaultAttributes = function (selection) {
        selection.style("stroke", "none");
    };
    AreaSVGDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {
        // areas are represented by one single element; always get that element
        // regardless of the data index.
        return _super.prototype.getVisualPrimitiveAtIndex.call(this, 0);
    };
    return AreaSVGDrawer;
}(svgDrawer_1.SVGDrawer));
exports.AreaSVGDrawer = AreaSVGDrawer;
var AREA_FILL_ATTRS = ["opacity", "fill", "fill-opacity"];
var AREA_STROKE_ATTRS = ["opacity", "stroke", "stroke-width"];
function makeAreaCanvasDrawStep(d3AreaFactory, d3LineFactory) {
    return function (context, data, projector) {
        var fillAttrs = canvasDrawer_1.resolveAttributes(projector, AREA_FILL_ATTRS, data[0], 0);
        canvasDrawer_1.renderArea(context, d3AreaFactory(), data[0], fillAttrs);
        var strokeAttrs = canvasDrawer_1.resolveAttributes(projector, AREA_STROKE_ATTRS, data[0], 0);
        canvasDrawer_1.renderLine(context, d3LineFactory(), data[0], strokeAttrs);
    };
}
exports.makeAreaCanvasDrawStep = makeAreaCanvasDrawStep;
