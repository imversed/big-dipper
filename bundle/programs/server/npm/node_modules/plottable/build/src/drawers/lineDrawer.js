"use strict";
/**
 * Copyright 2014-present Palantir Technologies
 * @license MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var canvasDrawer_1 = require("./canvasDrawer");
var svgDrawer_1 = require("./svgDrawer");
var LineSVGDrawer = /** @class */ (function (_super) {
    tslib_1.__extends(LineSVGDrawer, _super);
    function LineSVGDrawer() {
        return _super.call(this, "path", "line") || this;
    }
    LineSVGDrawer.prototype._applyDefaultAttributes = function (selection) {
        selection.style("fill", "none");
    };
    LineSVGDrawer.prototype.getVisualPrimitiveAtIndex = function (index) {
        return _super.prototype.getVisualPrimitiveAtIndex.call(this, 0);
    };
    return LineSVGDrawer;
}(svgDrawer_1.SVGDrawer));
exports.LineSVGDrawer = LineSVGDrawer;
var LINE_ATTRIBUTES = [
    "opacity",
    "stroke-opacity",
    "stroke-width",
    "stroke",
    "stroke-dasharray",
];
/**
 * @param d3LineFactory A callback that gives this Line Drawer a d3.Line object which will be
 * used to draw with.
 *
 * TODO put the d3.Line into the attrToAppliedProjector directly
 */
function makeLineCanvasDrawStep(d3LineFactory) {
    return function (context, data, attrToAppliedProjector) {
        var lineStyle = canvasDrawer_1.resolveAttributes(attrToAppliedProjector, LINE_ATTRIBUTES, data[0], 0);
        canvasDrawer_1.renderLine(context, d3LineFactory(), data[0], lineStyle);
    };
}
exports.makeLineCanvasDrawStep = makeLineCanvasDrawStep;
