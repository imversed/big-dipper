name: Deploy to canary
on:
  workflow_dispatch:
jobs:
  deploy:
    name: Canary deploy
    runs-on: ubuntu-latest
    container:
      image: us.gcr.io/spair-api/deploy/ci:7.0.0
      credentials:
        username: _json_key
        password: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    steps:
      - name: deploy to test
        env:
          CLOUDSDK_API_KEY: ${{ secrets.CLOUDSDK_API_KEY }}
          CLOUDSDK_COMPUTE_ZONE: ${{ secrets.CLOUDSDK_COMPUTE_ZONE }}
          CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
          KUBERNETES_CLUSTER: production
        shell: bash
        run: |
          . configure
          export APP_NAME=$(jq -r .name package.json)
          export IMAGE_NAME=us.gcr.io/spair-api/fulldivevr/$APP_NAME
          export COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
          export IMAGE_TAG=$IMAGE_NAME:$COMMIT_HASH
          >
            helm upgrade ${{ secrets.HELM_RELEASE }} fulldive/service
            --install --namespace ${{ secrets.KUBERNETES_NAMESPACE }}
            -f deploy/values.yml
            --set-string "image.tag=$COMMIT_HASH"
            --set-string "service.http.ingress.host=${{ secrets.HOST_PRODUCTION }}"
            --set-string "resources.requests.cpu=${{ secrets.REQUESTS_CPU }}"
            --set-string "resources.requests.memory=${{ secrets.REQUESTS_MEMORY }}"
            --set-string "resources.limits.cpu=${{ secrets.LIMITS_CPU }}"
            --set-string "resources.limits.memory=${{secrets.LIMITS_MEMORY}}"
            --wait


